{
    "type": "bundle",
    "id": "bundle--b9045726-bdb5-4cb4-b2c3-db09a27f5820",
    "spec_version": "2.0",
    "objects": [
        {   "primary_motivation": "personal-gain",
            "first_seen":"2018",
            "x_MISP-uuid": "53583c40-935e-11e9-b4fc-d7e217a306d2",
            "x_MISP-description": "This threat actor initially came to our attention in April 2018, leveraging both Western and Chinese Git repositories to deliver malware to honeypot systems vulnerable to an Apache Struts vulnerability.\nIn late July, we became aware that the same actor was engaged in another similar campaign. Through our investigation into this new campaign, we were able to uncover more details about the actor.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "intrusion-set",
            "name": "Rocke",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name [Rocke](https://attack.mitre.org/groups/G0106) comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between [Rocke](https://attack.mitre.org/groups/G0106) and the Iron Cybercrime Group, though this attribution has not been confirmed.(Citation: Talos Rocke August 2018)",
            "x_mitre_version": "1.0",
            "modified": "2022-06-11T20:10:32.917Z",
            "aliases": [
                "Rocke",
                "Iron Group"
            ],
            "created": "2020-05-26T14:20:20.623Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "id": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/groups/G0106",
                    "external_id": "G0106",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--3e039f64-08da-4bb3-b8d5-1ed6428980ac",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) used malware to download additional malicious files to the target system.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
            "modified": "2020-05-26T16:17:59.750Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.750Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--5d8e9a49-f534-4cb6-9e3e-aebacb3c1dd0",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) conducted scanning for exposed TCP port 7001 as well as SSH and Redis servers.(Citation: Talos Rocke August 2018)(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88",
            "modified": "2020-06-15T19:59:06.620Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.683Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--5de38b67-dbc7-46bf-bb73-91cd0e069d05",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106)'s miner, \"TermsHost.exe\", evaded defenses by injecting itself into Windows processes, including Notepad.exe.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662",
            "modified": "2020-05-26T16:17:59.556Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.556Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--6b1cc49f-8d94-4f59-a723-2a70c3edf760",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has installed an \"init.d\" startup script to maintain persistence.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
            "modified": "2020-06-11T19:52:07.425Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.430Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--30d1528d-6a50-47b2-ab5c-eb9074adc716",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) used scripts which killed processes and added firewall rules to block traffic related to other cryptominers.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
            "modified": "2020-06-15T19:59:06.631Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.674Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--31e01486-8827-41cd-a21b-dc420554d1bb",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56",
            "modified": "2020-05-26T16:17:59.747Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.747Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--46c37037-00da-4cf5-bde1-4296e10e6483",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has distributed cryptomining malware.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)",
            "target_ref": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
            "modified": "2020-05-26T16:17:59.753Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.753Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--47b95300-a51c-4d91-9bbe-e40956df2081",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825",
            "modified": "2020-06-16T13:34:56.503Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.337Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--49a68076-c596-412d-a8af-3e238dfef960",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) installed a cron job that downloaded and executed files from the C2.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c",
            "modified": "2020-05-26T16:17:59.687Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.687Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                },
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--78fc38f6-88ee-4f26-84e1-7532d95a4fbe",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106)'s miner has created UPX-packed files in the Windows Start Menu Folder.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "modified": "2020-06-15T19:59:06.538Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.550Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                },
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--93b62fc4-f024-4482-9ea1-041bc3d29bfd",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has cleared log files within the /var/log/ folder.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
            "modified": "2020-06-11T19:52:07.230Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.230Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--521c66b9-fe52-4c2b-bc32-8ed3d98c7a71",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used Python-based malware to install and spread their coinminer.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
            "modified": "2020-06-11T19:52:07.318Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.318Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--2107aab0-0191-46d1-abec-8d98ac916c21",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
            "modified": "2020-06-19T20:41:21.297Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-19T20:41:21.297Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--06508c23-746d-4894-b414-cff925692bd5",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) exploited Apache Struts, Oracle WebLogic (CVE-2017-10271), and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)",
            "target_ref": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
            "modified": "2020-05-26T16:17:59.751Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.751Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--29552ed5-ecfd-4a97-a6c9-d6da25181e1a",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used Pastebin, Gitee, and GitLab for Command and Control.(Citation: Anomali Rocke March 2019)(Citation: Talos Rocke August 2018)",
            "target_ref": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
            "modified": "2020-06-11T19:52:07.355Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.355Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                },
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--37327da8-efd3-48c0-9f91-38f384f8579e",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) issued wget requests from infected systems to the C2.(Citation: Talos Rocke August 2018)",
            "target_ref": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
            "modified": "2020-06-11T19:52:07.391Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.391Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--47440b3d-e6ef-4f7d-b732-453d1684424a",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617",
            "modified": "2020-06-15T19:59:06.693Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.283Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--277971c7-d42e-497f-8df4-be5b4bc094f8",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has modified UPX headers after packing files to break unpackers.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "modified": "2020-06-15T19:59:06.682Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.290Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--322876d6-1b49-43d8-9e4a-590919d1f930",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used uname -m to collect the name and information about the infected system's kernel.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "modified": "2020-06-11T19:52:07.232Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.232Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--674031ea-4fff-4669-b44b-d289fa1cc36e",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
            "modified": "2020-06-15T19:59:06.535Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.542Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--48141016-3fc6-46af-9f93-b52439ed78ea",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) downloaded a file \"libprocesshider\", which could hide files on the target system.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)",
            "target_ref": "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d",
            "modified": "2020-05-26T16:17:59.620Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.620Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a2f88508-4177-4294-b287-6a3494f6e738",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has changed file permissions of files so they could not be modified.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
            "modified": "2020-05-26T16:17:59.476Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.476Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a3d2ef4a-2bca-482d-897b-99da14b16b52",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) can detect a running process's PID on the infected machine.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
            "modified": "2020-05-26T16:17:59.484Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.484Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a430e3fa-bfc0-4ea8-8264-217f6aa015fc",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has installed a systemd service script to maintain persistence.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b",
            "modified": "2020-05-26T16:17:59.416Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.416Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a1956344-1a2d-4193-bb20-0f65c98776fe",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106)'s miner has created UPX-packed files in the Windows Start Menu Folder.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "modified": "2020-06-15T19:59:06.592Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.607Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--beae1b73-f369-4443-8e59-eb9e99665e8d",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.(Citation: Talos Rocke August 2018)\t",
            "target_ref": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "modified": "2020-06-15T19:59:06.583Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.610Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--c8fdab57-1e10-4f66-a1de-59a876c99ab1",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has extracted tar.gz files after downloading them from a C2 server.(Citation: Talos Rocke August 2018)",
            "target_ref": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "modified": "2020-06-11T19:52:07.352Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.352Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--ca1afca5-2f16-497e-bfff-1564706e05f2",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) used scripts which detected and uninstalled antivirus software.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)",
            "target_ref": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "modified": "2020-05-26T16:17:59.626Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.626Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--de8fefef-bfe7-4720-a443-66713a47b439",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used SSH private keys on the infected machine to spread its coinminer throughout a network.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf",
            "modified": "2020-06-11T19:52:07.241Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.241Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--dec705fd-139b-49d6-b0d8-888b2b922a12",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has deleted files on infected machines.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "modified": "2020-05-26T16:17:59.535Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.535Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--e8095f70-12de-4330-a293-25c4b4f22ffc",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has executed wget and curl commands to Pastebin over the HTTPS protocol.(Citation: Anomali Rocke March 2019)",
            "target_ref": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "modified": "2020-06-11T19:52:07.567Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.685Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--f7f947cd-6e0c-499c-8cdf-293e38657e31",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106)'s miner connects to a C2 server using port 51640.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
            "modified": "2020-05-26T16:17:59.411Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.411Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--fa69ac7a-8031-4fac-91e2-65e90f378cd1",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has spread its coinminer via SSH.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
            "modified": "2020-06-11T19:52:07.273Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.273Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--ff14431c-bf82-44be-b12a-a65e88d5347a",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has changed the time stamp of certain files.(Citation: Anomali Rocke March 2019)\t",
            "target_ref": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "modified": "2020-05-26T16:17:59.473Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.473Z",
            "external_references": [
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--ff438715-ffa8-4fa2-a69e-7126dd60bfb3",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) has used shell scripts which download mining executables and saves them with the filename \"java\".(Citation: Talos Rocke August 2018)",
            "target_ref": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "modified": "2020-06-11T19:52:07.350Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-11T19:52:07.350Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--ffb03265-d9d6-4dc7-ba8e-71498be4e131",
            "description": "[Rocke](https://attack.mitre.org/groups/G0106) used scripts which detected and uninstalled antivirus software.(Citation: Talos Rocke August 2018)(Citation: Unit 42 Rocke January 2019)",
            "target_ref": "attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384",
            "modified": "2020-05-26T16:17:59.670Z",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T16:17:59.670Z",
            "external_references": [
                {
                    "url": "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html",
                    "description": "Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020.",
                    "source_name": "Talos Rocke August 2018"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/",
                    "description": "Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020.",
                    "source_name": "Unit 42 Rocke January 2019"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-10-21T16:35:45.986Z",
            "name": "Application Layer Protocol",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1071",
                    "external_id": "T1071",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ],
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "2.0",
            "created": "2017-05-31T21:30:56.776Z",
            "x_mitre_network_requirements": true,
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
            "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T20:15:35.821Z",
            "name": "Web Protocols",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-15T16:13:46.151Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1071/001",
                    "external_id": "T1071.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-01-06T18:36:29.226Z",
            "name": "Registry Run Keys / Startup Folder",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "File: File Modification",
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-23T22:02:48.566Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Oddvar Moe, @oddvarmoe"
            ],
            "x_mitre_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1547/001",
                    "external_id": "T1547.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/270.html",
                    "external_id": "CAPEC-270",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Run Key",
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.",
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/sysinfo/32-bit-and-64-bit-application-data-in-the-registry",
                    "description": "Microsoft. (2018, May 31). 32-bit and 64-bit Application Data in the Registry. Retrieved August 3, 2020.",
                    "source_name": "Microsoft Wow6432Node 2018"
                },
                {
                    "url": "https://blog.malwarebytes.com/cybercrime/2013/10/hiding-in-plain-sight/",
                    "description": "Arntz, P. (2016, March 30). Hiding in Plain Sight. Retrieved August 3, 2020.",
                    "source_name": "Malwarebytes Wow6432Node 2016"
                },
                {
                    "source_name": "Microsoft RunOnceEx APR 2018",
                    "description": "Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.",
                    "url": "https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key"
                },
                {
                    "source_name": "Oddvar Moe RunOnceEx Mar 2018",
                    "description": "Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.",
                    "url": "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Boot or Logon Initialization Scripts",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Creation",
                "Process: Process Creation",
                "Command: Command Execution",
                "Active Directory: Active Directory Object Modification",
                "File: File Creation",
                "File: File Modification"
            ],
            "x_mitre_version": "2.1",
            "modified": "2021-04-27T19:58:02.332Z",
            "created": "2017-05-31T21:30:38.910Z",
            "x_mitre_platforms": [
                "macOS",
                "Windows",
                "Linux"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
            "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_detection": "Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1037",
                    "external_id": "T1037",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/564.html",
                    "external_id": "CAPEC-564",
                    "source_name": "capec"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Unix Shell",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-07-26T22:34:43.261Z",
            "created": "2020-03-09T14:15:05.330Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "id": "attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56",
            "x_mitre_platforms": [
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "root"
            ],
            "description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.",
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/004",
                    "external_id": "T1059.004",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://linux.die.net/man/1/bash",
                    "description": "die.net. (n.d.). bash(1) - Linux man page. Retrieved June 12, 2020.",
                    "source_name": "DieNet Bash"
                },
                {
                    "url": "https://support.apple.com/HT208050",
                    "description": "Apple. (2020, January 28). Use zsh as the default shell on your Mac. Retrieved June 12, 2020.",
                    "source_name": "Apple ZShell"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Systemd Service",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Process: Process Creation",
                "Command: Command Execution",
                "Service: Service Creation",
                "Service: Service Modification"
            ],
            "x_mitre_version": "1.2",
            "modified": "2020-10-09T13:46:29.701Z",
            "created": "2020-01-17T16:15:19.870Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "id": "attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b",
            "x_mitre_platforms": [
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "root"
            ],
            "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands:\n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at system boot.(Citation: Anomali Rocke March 2019)\n\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)",
            "x_mitre_contributors": [
                "Tony Lambert, Red Canary"
            ],
            "x_mitre_detection": "Systemd service unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>/home/<username>/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user.\n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: <code>systemctl list-units -\u2013type=service \u2013all</code>. Analyze the contents of <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAuditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as <code>/usr/sbin/service</code> may reveal malicious systemd service execution.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1543/002",
                    "external_id": "T1543.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/550.html",
                    "external_id": "CAPEC-550",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/551.html",
                    "external_id": "CAPEC-551",
                    "source_name": "capec"
                },
                {
                    "url": "http://man7.org/linux/man-pages/man1/systemd.1.html",
                    "description": "Linux man-pages. (2014, January). systemd(1) - Linux manual page. Retrieved April 23, 2019.",
                    "source_name": "Linux man-pages: systemd January 2014"
                },
                {
                    "url": "https://www.freedesktop.org/wiki/Software/systemd/",
                    "description": "Freedesktop.org. (2018, September 29). systemd System and Service Manager. Retrieved April 23, 2019.",
                    "source_name": "Freedesktop.org Linux systemd 29SEP2018"
                },
                {
                    "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang",
                    "description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.",
                    "source_name": "Anomali Rocke March 2019"
                },
                {
                    "url": "https://www.rapid7.com/db/modules/exploit/linux/local/service_persistence",
                    "description": "Rapid7. (2016, June 22). Service Persistence. Retrieved April 23, 2019.",
                    "source_name": "Rapid7 Service Persistence 22JUNE2016"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Python",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/006",
                    "external_id": "T1059.006",
                    "source_name": "mitre-attack"
                }
            ],
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.0",
            "modified": "2021-07-26T22:49:23.094Z",
            "x_mitre_system_requirements": [
                "Python is installed."
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM",
                "root"
            ],
            "description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
            "x_mitre_remote_support": false,
            "x_mitre_detection": "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
            "created": "2020-03-09T14:38:24.334Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Deobfuscate/Decode Files or Information",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Modification",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.1",
            "modified": "2020-07-09T14:42:23.122Z",
            "created": "2017-12-14T16:46:06.044Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Host intrusion prevention systems",
                "Signature-based detection",
                "Network intrusion detection system"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)",
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Red Canary"
            ],
            "x_mitre_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1140",
                    "external_id": "T1140",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Malwarebytes Targeted Attack against Saudi Arabia",
                    "description": "Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",
                    "url": "https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-20T21:51:45.776Z",
            "name": "Exploit Public-Facing Application",
            "x_mitre_data_sources": [
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "2.3",
            "created": "2018-04-18T17:59:24.739Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Network",
                "Linux",
                "macOS",
                "Containers"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
            "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Yossi Weizman, Azure Defender Research Team",
                "Praetorian"
            ],
            "x_mitre_detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1190",
                    "external_id": "T1190",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "NVD CVE-2016-6662",
                    "description": "National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.",
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-6662"
                },
                {
                    "source_name": "CIS Multiple SMB Vulnerabilities",
                    "description": "CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.",
                    "url": "https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/"
                },
                {
                    "url": "https://us-cert.cisa.gov/ncas/alerts/TA18-106A",
                    "description": "US-CERT. (2018, April 20). Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
                    "source_name": "US-CERT TA18-106A Network Infrastructure Devices 2018"
                },
                {
                    "url": "https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954",
                    "description": "Omar Santos. (2020, October 19). Attackers Continue to Target Legacy Devices. Retrieved October 20, 2020.",
                    "source_name": "Cisco Blog Legacy Device Attacks"
                },
                {
                    "source_name": "NVD CVE-2014-7169",
                    "description": "National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.",
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7169"
                },
                {
                    "source_name": "OWASP Top 10",
                    "description": "OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018.",
                    "url": "https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"
                },
                {
                    "url": "https://cwe.mitre.org/top25/index.html",
                    "description": "Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011, September 13). 2011 CWE/SANS Top 25 Most Dangerous Software Errors. Retrieved April 10, 2019.",
                    "source_name": "CWE top 25"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-09-13T21:08:09.985Z",
            "name": "Linux and Mac File and Directory Permissions Modification",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "File: File Metadata"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-02-04T19:24:27.774Z",
            "x_mitre_permissions_required": [
                "User",
                "root"
            ],
            "x_mitre_platforms": [
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
            "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include <code>chmod +x</code>, <code>chmod -R 755</code>, and <code>chmod 777</code>.(Citation: 20 macOS Common Tools and Techniques) \n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1222/002",
                    "external_id": "T1222.002",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Hybrid Analysis Icacls1 June 2018",
                    "description": "Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.",
                    "url": "https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100"
                },
                {
                    "source_name": "Hybrid Analysis Icacls2 May 2018",
                    "description": "Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.",
                    "url": "https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Hidden Files and Directories",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Process: Process Creation",
                "Command: Command Execution",
                "File: File Metadata"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T22:32:25.985Z",
            "created": "2020-02-26T17:46:13.128Z",
            "id": "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d",
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1564/001",
                    "external_id": "T1564.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Sofacy Komplex Trojan",
                    "description": "Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/"
                },
                {
                    "source_name": "Antiquated Mac Malware",
                    "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                    "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"
                },
                {
                    "source_name": "WireLurker",
                    "description": "Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.",
                    "url": "https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Dynamic Linker Hijacking",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Module: Module Load",
                "Process: Process Creation",
                "Command: Command Execution"
            ],
            "x_mitre_version": "2.0",
            "modified": "2021-04-27T19:55:18.453Z",
            "created": "2020-03-13T20:09:59.569Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825",
            "description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/006",
                    "external_id": "T1574.006",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/13.html",
                    "external_id": "CAPEC-13",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/640.html",
                    "external_id": "CAPEC-640",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.man7.org/linux/man-pages/man8/ld.so.8.html",
                    "description": "Kerrisk, M. (2020, June 13). Linux Programmer's Manual. Retrieved June 15, 2020.",
                    "source_name": "Man LD.SO"
                },
                {
                    "url": "https://www.tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html",
                    "description": "The Linux Documentation Project. (n.d.). Shared Libraries. Retrieved January 31, 2020.",
                    "source_name": "TLDP Shared Libraries"
                },
                {
                    "url": "https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/OverviewOfDynamicLibraries.html",
                    "description": "Apple Inc.. (2012, July 23). Overview of Dynamic Libraries. Retrieved March 24, 2021.",
                    "source_name": "Apple Doco Archive Dynamic Libraries"
                },
                {
                    "url": "https://www.baeldung.com/linux/ld_preload-trick-what-is",
                    "description": "baeldung. (2020, August 9). What Is the LD_PRELOAD Trick?. Retrieved March 24, 2021.",
                    "source_name": "Baeldung LD_PRELOAD"
                },
                {
                    "url": "https://www.datawire.io/code-injection-on-linux-and-macos/",
                    "description": "Itamar Turner-Trauring. (2017, April 18). \u201cThis will only hurt for a moment\u201d: code injection on Linux and macOS with LD_PRELOAD. Retrieved December 20, 2017.",
                    "source_name": "Code Injection on Linux and macOS"
                },
                {
                    "source_name": "Uninformed Needle",
                    "description": "skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.",
                    "url": "http://hick.org/code/skape/papers/needle.txt"
                },
                {
                    "source_name": "Phrack halfdead 1997",
                    "description": "halflife. (1997, September 1). Shared Library Redirection Techniques. Retrieved December 20, 2017.",
                    "url": "http://phrack.org/issues/51/8.html"
                },
                {
                    "url": "http://www.nth-dimension.org.uk/pub/BTL.pdf",
                    "description": "Tim Brown. (2011, June 29). Breaking the links: Exploiting the linker. Retrieved March 29, 2021.",
                    "source_name": "Brown Exploiting Linkers"
                },
                {
                    "url": "https://theevilbit.github.io/posts/dyld_insert_libraries_dylib_injection_in_macos_osx_deep_dive/",
                    "description": "Fitzl, C. (2019, July 9). DYLD_INSERT_LIBRARIES DYLIB injection in macOS / OSX. Retrieved March 26, 2020.",
                    "source_name": "TheEvilBit DYLD_INSERT_LIBRARIES"
                },
                {
                    "url": "https://blog.timac.org/2012/1218-simple-code-injection-using-dyld_insert_libraries/",
                    "description": "Timac. (2012, December 18). Simple code injection using DYLD_INSERT_LIBRARIES. Retrieved March 26, 2020.",
                    "source_name": "Timac DYLD_INSERT_LIBRARIES"
                },
                {
                    "url": "https://jon-gabilondo-angulo-7635.medium.com/how-to-inject-code-into-mach-o-apps-part-ii-ddb13ebc8191",
                    "description": "Jon Gabilondo. (2019, September 22). How to Inject Code into Mach-O Apps. Part II.. Retrieved March 24, 2021.",
                    "source_name": "Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Disable or Modify Tools",
            "x_mitre_data_sources": [
                "Process: Process Termination",
                "Windows Registry: Windows Registry Key Modification",
                "Windows Registry: Windows Registry Key Deletion",
                "Command: Command Execution",
                "Service: Service Metadata",
                "Sensor Health: Host Status"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-18T21:27:48.159Z",
            "created": "2020-02-21T20:32:20.810Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Log analysis",
                "Signature-based detection",
                "Host intrusion prevention systems",
                "File monitoring"
            ],
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux",
                "Containers",
                "IaaS"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take the many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)",
            "x_mitre_contributors": [
                "Gordon Long, Box, Inc., @ethicalhax",
                "Ziv Karliner, @ziv_kr, Team Nautilus Aqua Security",
                "Nathaniel Quist, Palo Alto Networks",
                "Gal Singer, @galsinger29, Team Nautilus Aqua Security"
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.\n\nLack of expected log events may be suspicious.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1562/001",
                    "external_id": "T1562.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/578.html",
                    "external_id": "CAPEC-578",
                    "source_name": "capec"
                },
                {
                    "url": "https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/",
                    "description": "de Plaa, C. (2019, June 19). Red Team Tactics: Combining Direct System Calls and sRDI to bypass AV/EDR. Retrieved September 29, 2021.",
                    "source_name": "OutFlank System Calls"
                },
                {
                    "url": "https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/",
                    "description": "MDSec Research. (2020, December). Bypassing User-Mode Hooks and Direct Invocation of System Calls for Red Teams. Retrieved September 29, 2021.",
                    "source_name": "MDSec System Calls"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Disable or Modify System Firewall",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Windows Registry: Windows Registry Key Modification",
                "Firewall: Firewall Disable",
                "Firewall: Firewall Rule Modification"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T22:18:11.166Z",
            "created": "2020-02-21T21:00:48.814Z",
            "x_mitre_defense_bypassed": [
                "Firewall"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
            "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. ",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1562/004",
                    "external_id": "T1562.004",
                    "source_name": "mitre-attack"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Clear Linux or Mac System Logs",
            "x_mitre_data_sources": [
                "File: File Deletion",
                "File: File Modification",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T21:23:51.886Z",
            "created": "2020-01-28T17:11:54.034Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
            "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1070/002",
                    "external_id": "T1070.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/",
                    "description": "Marcel. (2018, April 19). 12 Critical Linux Log Files You Must be Monitoring. Retrieved March 29, 2020.",
                    "source_name": "Linux Logs"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "File Deletion",
            "x_mitre_data_sources": [
                "File: File Deletion",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T21:34:16.209Z",
            "created": "2020-01-31T12:35:36.479Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
            "x_mitre_contributors": [
                "Walker Johnson"
            ],
            "x_mitre_detection": "It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1070/004",
                    "external_id": "T1070.004",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Trend Micro APT Attack Tools",
                    "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                    "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-29T21:39:46.724Z",
            "name": "Timestomp",
            "x_mitre_data_sources": [
                "File: File Modification",
                "File: File Metadata"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-01-31T12:42:44.103Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "root",
                "SYSTEM",
                "User"
            ],
            "description": "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Romain Dumont, ESET"
            ],
            "x_mitre_detection": "Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1070/006",
                    "external_id": "T1070.006",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "WindowsIR Anti-Forensic Techniques",
                    "description": "Carvey, H. (2013, July 23). HowTo: Determine/Detect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.",
                    "url": "http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-20T15:42:48.595Z",
            "name": "Ingress Tool Transfer",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content",
                "File: File Creation"
            ],
            "x_mitre_version": "2.0",
            "created": "2017-05-31T21:31:16.408Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
            "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1105",
                    "external_id": "T1105",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-20T19:23:37.762Z",
            "name": "Match Legitimate Name or Location",
            "x_mitre_data_sources": [
                "Image: Image Metadata",
                "File: File Metadata",
                "Process: Process Metadata"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-02-10T20:43:10.239Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "Containers"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Yossi Weizman, Azure Defender Research Team",
                "Vishwas Manral, McAfee"
            ],
            "x_mitre_detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nIn containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1036/005",
                    "external_id": "T1036.005",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/177.html",
                    "external_id": "CAPEC-177",
                    "source_name": "capec"
                },
                {
                    "url": "http://pages.endgame.com/rs/627-YBU-612/images/EndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf",
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.",
                    "source_name": "Elastic Masquerade Ball"
                },
                {
                    "url": "https://twitter.com/ItsReallyNick/status/1055321652777619457",
                    "description": "Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.",
                    "source_name": "Twitter ItsReallyNick Masquerading Update"
                },
                {
                    "url": "https://docs.docker.com/engine/reference/commandline/images/",
                    "description": "Docker. (n.d.). Docker Images. Retrieved April 6, 2021.",
                    "source_name": "Docker Images"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Network Service Scanning",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Cloud Service: Cloud Service Enumeration",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.2",
            "modified": "2021-04-09T14:56:26.562Z",
            "created": "2017-05-31T21:30:43.915Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88",
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS",
                "Containers"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM",
                "User"
            ],
            "description": "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system. \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.",
            "x_mitre_contributors": [
                "Praetorian"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1046",
                    "external_id": "T1046",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/300.html",
                    "external_id": "CAPEC-300",
                    "source_name": "capec"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T22:02:25.221Z",
            "name": "Non-Standard Port",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-14T18:18:32.443Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
            "description": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1571",
                    "external_id": "T1571",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage",
                    "description": "Security Response attack Investigation Team. (2019, March 27). Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S.. Retrieved April 10, 2019.",
                    "source_name": "Symantec Elfin Mar 2019"
                },
                {
                    "url": "https://www.fortinet.com/blog/threat-research/analysis-of-new-agent-tesla-spyware-variant.html",
                    "description": "Zhang, X. (2018, April 05). Analysis of New Agent Tesla Spyware Variant. Retrieved November 5, 2018.",
                    "source_name": "Fortinet Agent Tesla April 2018"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Software Packing",
            "x_mitre_data_sources": [
                "File: File Metadata"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-15T13:56:47.154Z",
            "created": "2020-02-05T14:17:46.686Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Heuristic detection",
                "Signature-based detection"
            ],
            "x_mitre_platforms": [
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
            "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
            "x_mitre_contributors": [
                "Filip Kafka, ESET"
            ],
            "x_mitre_detection": "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027/002",
                    "external_id": "T1027.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/570.html",
                    "external_id": "CAPEC-570",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2018/01/WP-FinFisher.pdf",
                    "description": "Kafka, F. (2018, January). ESET's Guide to Deobfuscating and Devirtualizing FinFisher. Retrieved August 12, 2019.",
                    "source_name": "ESET FinFisher Jan 2018"
                },
                {
                    "source_name": "Wikipedia Exe Compression",
                    "description": "Executable compression. (n.d.). Retrieved December 4, 2014.",
                    "url": "http://en.wikipedia.org/wiki/Executable_compression"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Compile After Delivery",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027/004",
                    "external_id": "T1027.004",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "ClearSky MuddyWater Nov 2018",
                    "description": "ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.",
                    "url": "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf"
                },
                {
                    "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/",
                    "description": "Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019.",
                    "source_name": "TrendMicro WindowsAppMac"
                }
            ],
            "x_mitre_data_sources": [
                "File: File Metadata",
                "File: File Creation",
                "Process: Process Creation",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T20:59:32.293Z",
            "x_mitre_system_requirements": [
                "Compiler software (either native to the system or delivered by the adversary)"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617",
            "x_mitre_defense_bypassed": [
                "Signature-based detection",
                "Host intrusion prevention systems",
                "Anti-virus",
                "Binary Analysis",
                "Static File Analysis"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",
            "x_mitre_contributors": [
                "Praetorian",
                "Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank"
            ],
            "x_mitre_detection": "Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.",
            "created": "2020-03-16T15:30:57.711Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Obfuscated Files or Information",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "File: File Metadata",
                "File: File Creation",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-20T16:33:13.472Z",
            "created": "2017-05-31T21:30:32.662Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Host forensic analysis",
                "Signature-based detection",
                "Host intrusion prevention systems",
                "Application control",
                "Log analysis",
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
            "x_mitre_contributors": [
                "Red Canary",
                "Christiaan Beek, @ChristiaanBeek"
            ],
            "x_mitre_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027",
                    "external_id": "T1027",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/267.html",
                    "external_id": "CAPEC-267",
                    "source_name": "capec"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                },
                {
                    "source_name": "Linux/Cdorked.A We Live Security Analysis",
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "FireEye Obfuscation June 2017",
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                },
                {
                    "source_name": "FireEye Revoke-Obfuscation July 2017",
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                },
                {
                    "source_name": "PaloAlto EncodedCommand March 2017",
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                },
                {
                    "source_name": "GitHub Revoke-Obfuscation",
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                },
                {
                    "source_name": "GitHub Office-Crackros Aug 2016",
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Process Discovery",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1057",
                    "external_id": "T1057",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/573.html",
                    "external_id": "CAPEC-573",
                    "source_name": "capec"
                }
            ],
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.2",
            "modified": "2020-03-26T18:05:53.130Z",
            "x_mitre_system_requirements": [
                "Administrator, SYSTEM may provide better process ownership details"
            ],
            "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
            "created": "2017-05-31T21:30:48.728Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Portable Executable Injection",
            "x_mitre_data_sources": [
                "Process: Process Modification",
                "Process: OS API Execution",
                "Process: Process Access"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-18T12:21:11.178Z",
            "created": "2020-01-14T01:27:31.344Z",
            "id": "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Application control"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1055/002",
                    "external_id": "T1055.002",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Elastic Process Injection July 2017",
                    "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                    "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-10-15T14:15:06.853Z",
            "name": "SSH",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Network Traffic: Network Connection Creation",
                "Logon Session: Logon Session Creation"
            ],
            "x_mitre_version": "1.1",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "x_mitre_system_requirements": [
                "An SSH server is configured and running."
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
            "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }
            ],
            "x_mitre_detection": "Use of SSH may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nOn macOS systems <code>log show --predicate 'process = \"sshd\"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nOn Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.",
            "created": "2020-02-11T18:27:15.774Z",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1021/004",
                    "external_id": "T1021.004",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/555.html",
                    "external_id": "CAPEC-555",
                    "source_name": "capec"
                },
                {
                    "url": "https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins",
                    "description": "Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs: Quarantine Edition [Entry 6] \u2013 Working From Home? Remote Logins. Retrieved August 19, 2021.",
                    "source_name": "Apple Unified Log Analysis Remote Login and Screen Sharing"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Remote System Discovery",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Network Traffic: Network Connection Creation",
                "File: File Access"
            ],
            "x_mitre_version": "3.2",
            "modified": "2021-10-15T15:30:00.172Z",
            "created": "2017-05-31T21:30:28.187Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039). Adversaries may also use local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) in order to discover the hostname to IP address mappings of remote systems. \n",
            "x_mitre_contributors": [
                "Daniel Stepanic, Elastic",
                "RedHuntLabs, @redhuntlabs"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1018",
                    "external_id": "T1018",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/292.html",
                    "external_id": "CAPEC-292",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql",
                    "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
                    "source_name": "Elastic - Koadiac Detection with EQL"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-14T12:06:32.187Z",
            "name": "Resource Hijacking",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "File: File Creation",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow",
                "Sensor Health: Host Status"
            ],
            "x_mitre_version": "1.2",
            "created": "2019-04-17T14:50:05.682Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }
            ],
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS",
                "Containers"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
            "description": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based(Citation: CloudSploit - Unused AWS Regions) systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware kills off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "David Fiser, @anu4is, Trend Micro",
                "Alfredo Oliveira, Trend Micro",
                "Jay Chen, Palo Alto Networks",
                "Magno Logan, @magnologan, Trend Micro",
                "Vishwas Manral, McAfee",
                "Yossi Weizman, Azure Defender Research Team"
            ],
            "x_mitre_impact_type": [
                "Availability"
            ],
            "x_mitre_detection": "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1496",
                    "external_id": "T1496",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Kaspersky Lazarus Under The Hood Blog 2017",
                    "description": "GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019.",
                    "url": "https://securelist.com/lazarus-under-the-hood/77908/"
                },
                {
                    "source_name": "CloudSploit - Unused AWS Regions",
                    "description": "CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.",
                    "url": "https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/",
                    "description": "Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.",
                    "source_name": "Unit 42 Hildegard Malware"
                },
                {
                    "url": "https://www.trendmicro.com/en_us/research/19/e/infected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html",
                    "description": "Oliveira, A. (2019, May 30). Infected Containers Target Docker via Exposed APIs. Retrieved April 6, 2021.",
                    "source_name": "Trend Micro Exposed Docker APIs"
                },
                {
                    "url": "https://www.trendmicro.com/en_us/research/20/i/war-of-linux-cryptocurrency-miners-a-battle-for-resources.html",
                    "description": "Oliveira, A., Fiser, D. (2020, September 10). War of Linux Cryptocurrency Miners: A Battle for Resources. Retrieved April 6, 2021.",
                    "source_name": "Trend Micro War of Crypto Miners"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Cron",
            "x_mitre_data_sources": [
                "Scheduled Job: Scheduled Job Creation",
                "Command: Command Execution",
                "File: File Modification",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-08-23T15:29:36.918Z",
            "created": "2019-12-03T14:25:00.538Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "id": "attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c",
            "x_mitre_platforms": [
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for persistence. ",
            "x_mitre_remote_support": false,
            "x_mitre_detection": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1053/003",
                    "external_id": "T1053.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Security Software Discovery",
            "x_mitre_data_sources": [
                "Firewall: Firewall Metadata",
                "Firewall: Firewall Enumeration",
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-03-29T16:05:00.198Z",
            "created": "2020-02-21T21:16:18.066Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Azure AD",
                "Office 365",
                "SaaS",
                "IaaS",
                "Linux",
                "macOS",
                "Google Workspace"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384",
            "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS)",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1518/001",
                    "external_id": "T1518.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/581.html",
                    "external_id": "CAPEC-581",
                    "source_name": "capec"
                },
                {
                    "url": "https://expel.io/blog/finding-evil-in-aws/",
                    "description": "A. Randazzo, B. Manahan and S. Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.",
                    "source_name": "Expel IO Evil in AWS"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Information Discovery",
            "x_mitre_data_sources": [
                "Instance: Instance Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "2.3",
            "modified": "2021-10-13T23:21:27.750Z",
            "created": "2017-05-31T21:31:04.307Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
            "x_mitre_contributors": [
                "Maril Vernon @shewhohacks",
                "Praetorian"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1082",
                    "external_id": "T1082",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/312.html",
                    "external_id": "CAPEC-312",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/",
                    "description": "Phile Stokes. (2018, September 20). On the Trail of OSX.FairyTale | Adware Playing at Malware. Retrieved August 24, 2021.",
                    "source_name": "OSX.FairyTale"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                },
                {
                    "url": "https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html",
                    "description": "Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.",
                    "source_name": "Amazon Describe Instance"
                },
                {
                    "url": "https://cloud.google.com/compute/docs/reference/rest/v1/instances",
                    "description": "Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.",
                    "source_name": "Google Instances Resource"
                },
                {
                    "source_name": "Microsoft Virutal Machine API",
                    "description": "Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",
                    "url": "https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Private Keys",
            "x_mitre_data_sources": [
                "File: File Access",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T21:36:36.613Z",
            "created": "2020-02-04T13:06:49.258Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }
            ],
            "id": "attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\n\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.",
            "x_mitre_contributors": [
                "Itzik Kotler, SafeBreach"
            ],
            "x_mitre_detection": "Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1552/004",
                    "external_id": "T1552.004",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Wikipedia Public Key Crypto",
                    "description": "Wikipedia. (2017, June 29). Public-key cryptography. Retrieved July 5, 2017.",
                    "url": "https://en.wikipedia.org/wiki/Public-key_cryptography"
                },
                {
                    "source_name": "Kaspersky Careto",
                    "description": "Kaspersky Labs. (2014, February 11). Unveiling \u201cCareto\u201d - The Masked APT. Retrieved July 5, 2017.",
                    "url": "https://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf"
                },
                {
                    "source_name": "Palo Alto Prince of Persia",
                    "description": "Bar, T., Conant, S., Efraim, L. (2016, June 28). Prince of Persia \u2013 Game Over. Retrieved July 5, 2017.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Web Service",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Connection Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2020-03-26T23:26:10.297Z",
            "created": "2017-05-31T21:31:13.915Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
            "x_mitre_contributors": [
                "Anastasios Pingios"
            ],
            "x_mitre_detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1102",
                    "external_id": "T1102",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T23:12:30.499Z",
            "name": "Dead Drop Resolver",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-14T22:24:21.841Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
            "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1102/001",
                    "external_id": "T1102.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "relationship",
            "id": "relationship--a0a82fac-6840-4462-9112-aee3d4444519",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "originates-from",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--036a483f-27e7-48f0-9e75-b44f99c3c531"
        },
        {
            "type": "relationship",
            "id": "relationship--dfbb6844-1ba4-4527-8d45-4a53bab57a5a",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851"
        },
        {
            "type": "relationship",
            "id": "relationship--f146a6de-6459-40f7-b2d5-37739207c82f",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--f6f6863a-41c0-4108-8a46-880e62ba1aca"
        },
        {
            "type": "relationship",
            "id": "relationship--33fd27d0-37d6-47e2-b8fc-91043224abcf",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--da23145d-8abe-40bf-9f8f-596562a3cb9f"
        },
        {
            "type": "relationship",
            "id": "relationship--d0bc5ab9-a048-4251-80b8-20a9061e0bd0",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--a2ec23af-45a5-47b4-b1c4-ffa0f55ba748"
        },
        {
            "type": "relationship",
            "id": "relationship--bfb74067-bfac-43e2-83fb-6812978939cf",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--78fd28bb-43cd-489a-aebe-f9eb0da326a3"
        },
        {
            "type": "relationship",
            "id": "relationship--1e62245b-843c-4259-bae3-6540d2545db4",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--6e60d8e6-9d8b-4d2a-a6eb-48cbea387d38"
        },
        {
            "type": "relationship",
            "id": "relationship--d4b42c1b-7be7-4aed-9b50-3177c9aa1166",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--c5306215-789f-4844-88a8-7f7d5dc5ad63"
        },
        {
            "type": "relationship",
            "id": "relationship--78cd418d-d0de-4804-b84c-39200c14ad28",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--e35fe4ea-44ba-4663-8639-1ebe3207524d"
        },
        {
            "type": "relationship",
            "id": "relationship--f857ec1c-f0aa-450f-804a-5ca192d17069",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--4a392c29-881a-4d82-84f7-5341acc18ee6"
        },
        {
            "type": "relationship",
            "id": "relationship--78cde377-8ed8-4d21-90f1-8cd2d4cbeb38",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "location--ee993c53-ddff-4d64-b3d0-fe0b0f5965e5"
        },
        {
            "type": "relationship",
            "id": "relationship--5ce752ea-2926-430e-b96d-887dffe171b3",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d"
        },
        {
            "type": "relationship",
            "id": "relationship--f3ce3fbd-4881-4261-a03e-affd0d71674c",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--4f4306a6-c059-4518-a5df-9e71a2ac31d7"
        },
        {
            "type": "relationship",
            "id": "relationship--075adf40-7be1-4c76-9f4c-7a104ccd478e",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--87b59608-b91e-411e-b0e2-fce3355ae862"
        },
        {
            "type": "relationship",
            "id": "relationship--e4bb49cd-50e6-4b76-886f-42746a8af7b2",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--7119e085-8c5a-4153-bb5c-10c9eb919305"
        },
        {
            "type": "relationship",
            "id": "relationship--99db9691-1058-4eac-96bd-44a37b137d8a",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--1432be4a-735c-4e9c-a974-b05a1ee2d74c"
        },
        {
            "type": "relationship",
            "id": "relationship--b62b4527-da74-40de-8223-673ccd70b03d",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--f522e018-c70f-4f8f-a78c-1d7900dbef25"
        },
        {
            "type": "relationship",
            "id": "relationship--76e15a09-2d66-40f5-aa47-1a65a593c656",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
            "target_ref": "identity--87976429-629e-44ed-a962-18efceb604e0"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--036a483f-27e7-48f0-9e75-b44f99c3c531",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Iran",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.303701Z",
            "id": "identity--87976429-629e-44ed-a962-18efceb604e0",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Construction sector as a target",
            "sectors": [
                "construction"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.304762Z",
            "id": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Defense sector as a target",
            "sectors": [
                "defense"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.305825Z",
            "id": "identity--4f4306a6-c059-4518-a5df-9e71a2ac31d7",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Education sector as a target",
            "sectors": [
                "education"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.307919Z",
            "id": "identity--87b59608-b91e-411e-b0e2-fce3355ae862",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Entertainment sector as a target",
            "sectors": [
                "entertainment"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.309978Z",
            "id": "identity--7119e085-8c5a-4153-bb5c-10c9eb919305",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Government sector as a target",
            "sectors": [
                "government"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.323862Z",
            "id": "identity--1432be4a-735c-4e9c-a974-b05a1ee2d74c",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Manufacturing sector as a target",
            "sectors": [
                "manufacturing"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.302614Z",
            "id": "identity--f522e018-c70f-4f8f-a78c-1d7900dbef25",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Communications sector as a target",
            "sectors": [
                "communications"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--f6f6863a-41c0-4108-8a46-880e62ba1aca",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "China",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--da23145d-8abe-40bf-9f8f-596562a3cb9f",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Germany",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--a2ec23af-45a5-47b4-b1c4-ffa0f55ba748",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "India",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--78fd28bb-43cd-489a-aebe-f9eb0da326a3",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Israel",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--6e60d8e6-9d8b-4d2a-a6eb-48cbea387d38",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Japan",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--c5306215-789f-4844-88a8-7f7d5dc5ad63",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Russia",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--e35fe4ea-44ba-4663-8639-1ebe3207524d",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Turkey",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--4a392c29-881a-4d82-84f7-5341acc18ee6",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "United Kingdom",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "United States",
            "spec_version": "2.1",
            "type": "location"
        }
    ]
}