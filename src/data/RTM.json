{
    "type": "bundle",
    "id": "bundle--8c225f5f-5f1d-4f7d-bc52-d7f4dafea37e",
    "spec_version": "2.0",
    "objects": [
        {
            "primary_motivation": "personal-gain",
            "first_seen": "2015",
            "x_MISP-description": "There are several groups actively and profitably targeting businesses in Russia. A trend that we have seen unfold before our eyes lately is these cybercriminals’ use of simple backdoors to gain a foothold in their targets’ networks. Once they have this access, a lot of the work is done manually, slowly getting to understand the network layout and deploying custom tools the criminals can use to steal funds from these entities. Some of the groups that best exemplify these trends are Buhtrap, Cobalt and Corkow.\nThe group discussed in this white paper is part of this new trend. We call this new group RTM; it uses custom malware, written in Delphi, that we cover in detail in later sections. The first trace of this tool in our telemetry data dates back to late 2015. The group also makes use of several different modules that they deploy where appropriate to their targets. They are interested in users of remote banking systems (RBS), mainly in Russia and neighboring countries.",
            "x_MISP-uuid": "88100602-8e8b-11e9-bb7c-1bf20b58e305",
            "type": "intrusion-set",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "name": "RTM",
            "x_mitre_version": "1.1",
            "modified": "2022-06-11T20:10:32.917Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "aliases": [
                "RTM"
            ],
            "id": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name ([RTM](https://attack.mitre.org/software/S0148)). (Citation: ESET RTM Feb 2017)",
            "x_mitre_contributors": [
                "Oleg Skulkin, Group-IB"
            ],
            "created": "2017-05-31T21:32:10.206Z",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/groups/G0048",
                    "external_id": "G0048",
                    "source_name": "mitre-attack"
                },
                {
                    "description": "(Citation: ESET RTM Feb 2017)",
                    "source_name": "RTM"
                },
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1bf08293-5342-4736-b3a9-c1f160ad9c81",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has attempted to lure victims into opening e-mail attachments to execute malicious code.(Citation: Group IB RTM August 2019)",
            "target_ref": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "modified": "2020-05-12T22:13:50.415Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T18:36:05.417Z",
            "external_references": [
                {
                    "url": "https://www.group-ib.com/blog/rtm",
                    "description": "Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020.",
                    "source_name": "Group IB RTM August 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--03e67769-31da-4a46-a5a6-1ccbdd0cf29f",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has distributed its malware via the RIG and SUNDOWN exploit kits, as well as online advertising network <code>Yandex.Direct</code>.(Citation: ESET RTM Feb 2017)(Citation: ESET Buhtrap and Buran April 2019)",
            "target_ref": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
            "modified": "2020-05-12T22:13:17.037Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T16:57:30.447Z",
            "external_references": [
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                },
                {
                    "url": "https://www.welivesecurity.com/2019/04/30/buhtrap-backdoor-ransomware-advertising-platform/",
                    "description": "ESET Research. (2019, April 30). Buhtrap backdoor and Buran ransomware distributed via major advertising platform. Retrieved May 11, 2020.",
                    "source_name": "ESET Buhtrap and Buran April 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--5f1493e8-65d8-474a-b6b7-c1311fc24d98",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has used spearphishing attachments to distribute its malware.(Citation: Group IB RTM August 2019)",
            "target_ref": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "modified": "2020-05-12T22:13:50.363Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T17:27:36.637Z",
            "external_references": [
                {
                    "url": "https://www.group-ib.com/blog/rtm",
                    "description": "Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020.",
                    "source_name": "Group IB RTM August 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--16dfd169-264f-410f-97bf-a1cdec20c50e",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has used search order hijacking to force TeamViewer to load a malicious DLL.(Citation: Group IB RTM August 2019)",
            "target_ref": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
            "modified": "2020-05-12T22:13:50.409Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T18:14:38.240Z",
            "external_references": [
                {
                    "url": "https://www.group-ib.com/blog/rtm",
                    "description": "Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020.",
                    "source_name": "Group IB RTM August 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--685a8409-db59-4ef3-b4de-786b87be8839",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has used a modified version of TeamViewer and Remote Utilities for remote access.(Citation: Group IB RTM August 2019)",
            "target_ref": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
            "modified": "2020-05-12T22:13:50.412Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T18:14:38.220Z",
            "external_references": [
                {
                    "url": "https://www.group-ib.com/blog/rtm",
                    "description": "Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020.",
                    "source_name": "Group IB RTM August 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--9755e169-0dd5-4bf5-a884-d50d31f33ad9",
            "description": "(Citation: ESET RTM Feb 2017)",
            "target_ref": "malware--92ec0cbd-2c30-44a2-b270-73f4ec949841",
            "modified": "2020-05-12T22:13:16.808Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2017-05-31T21:33:27.081Z",
            "external_references": [
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--09381138-b93b-4b0d-b82d-c21d452ff514",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has used Registry run keys to establish persistence for the [RTM](https://attack.mitre.org/software/S0148) Trojan and other tools, such as a modified version of TeamViewer remote desktop software.(Citation: ESET RTM Feb 2017)(Citation: Group IB RTM August 2019)",
            "target_ref": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "modified": "2020-05-12T22:13:50.406Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-11T17:51:01.565Z",
            "external_references": [
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                },
                {
                    "url": "https://www.group-ib.com/blog/rtm",
                    "description": "Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020.",
                    "source_name": "Group IB RTM August 2019"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a58ad2d1-7200-4ba8-9c24-fc640306ea2f",
            "description": "[RTM](https://attack.mitre.org/groups/G0048) has used an RSS feed on Livejournal to update a list of encrypted C2 server names.(Citation: ESET RTM Feb 2017)",
            "target_ref": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
            "modified": "2020-05-12T22:13:16.666Z",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2017-05-31T21:33:27.081Z",
            "external_references": [
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-01-06T18:36:29.226Z",
            "name": "Registry Run Keys / Startup Folder",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "File: File Modification",
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-23T22:02:48.566Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
            "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Oddvar Moe, @oddvarmoe"
            ],
            "x_mitre_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1547/001",
                    "external_id": "T1547.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/270.html",
                    "external_id": "CAPEC-270",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Run Key",
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.",
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/sysinfo/32-bit-and-64-bit-application-data-in-the-registry",
                    "description": "Microsoft. (2018, May 31). 32-bit and 64-bit Application Data in the Registry. Retrieved August 3, 2020.",
                    "source_name": "Microsoft Wow6432Node 2018"
                },
                {
                    "url": "https://blog.malwarebytes.com/cybercrime/2013/10/hiding-in-plain-sight/",
                    "description": "Arntz, P. (2016, March 30). Hiding in Plain Sight. Retrieved August 3, 2020.",
                    "source_name": "Malwarebytes Wow6432Node 2016"
                },
                {
                    "source_name": "Microsoft RunOnceEx APR 2018",
                    "description": "Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.",
                    "url": "https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key"
                },
                {
                    "source_name": "Oddvar Moe RunOnceEx Mar 2018",
                    "description": "Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.",
                    "url": "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-28T01:37:46.704Z",
            "name": "Drive-by Compromise",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Process: Process Creation",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content",
                "Application Log: Application Log Content"
            ],
            "x_mitre_version": "1.3",
            "created": "2018-04-18T17:59:24.739Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Windows",
                "Linux",
                "macOS",
                "SaaS"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
            "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)",
                "Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)"
            ],
            "x_mitre_detection": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1189",
                    "external_id": "T1189",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Shadowserver Strategic Web Compromise",
                    "description": "Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises \u2013 Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.",
                    "url": "http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/"
                },
                {
                    "url": "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/",
                    "description": "Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.",
                    "source_name": "Volexity OceanLotus Nov 2017"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "DLL Search Order Hijacking",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Module: Module Load"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-04-26T18:37:03.748Z",
            "created": "2020-03-13T18:11:08.357Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
            "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
            "x_mitre_contributors": [
                "Travis Smith, Tripwire",
                "Stefan Kanthak"
            ],
            "x_mitre_detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/001",
                    "external_id": "T1574.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/471.html",
                    "external_id": "CAPEC-471",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order?redirectedfrom=MSDN",
                    "description": "Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014.",
                    "source_name": "Microsoft Dynamic Link Library Search Order"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2010/07/malware-persistence-windows-registry.html",
                    "description": "Harbour, N. (2010, July 15). Malware Persistence without the Windows Registry. Retrieved November 17, 2020.",
                    "source_name": "FireEye Hijacking July 2010"
                },
                {
                    "url": "https://www.owasp.org/index.php/Binary_planting",
                    "description": "OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.",
                    "source_name": "OWASP Binary Planting"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2011/06/fxsst.html",
                    "description": "Harbour, N. (2011, June 3). What the fxsst?. Retrieved November 17, 2020.",
                    "source_name": "FireEye fxsst June 2011"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/security-updates/securityadvisories/2010/2269637",
                    "description": "Microsoft. (, May 23). Microsoft Security Advisory 2269637. Retrieved March 13, 2020.",
                    "source_name": "Microsoft Security Advisory 2269637"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection?redirectedfrom=MSDN",
                    "description": "Microsoft. (2018, May 31). Dynamic-Link Library Redirection. Retrieved March 13, 2020.",
                    "source_name": "Microsoft Dynamic-Link Library Redirection"
                },
                {
                    "url": "https://msdn.microsoft.com/en-US/library/aa375365",
                    "description": "Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.",
                    "source_name": "Microsoft Manifests"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2010/08/dll-search-order-hijacking-revisited.html",
                    "description": "Nick Harbour. (2010, September 1). DLL Search Order Hijacking Revisited. Retrieved March 13, 2020.",
                    "source_name": "FireEye DLL Search Order Hijacking"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "DLL Search Order Hijacking",
            "x_mitre_data_sources": [
                "File: File Creation",
                "File: File Modification",
                "Module: Module Load"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-04-26T18:37:03.748Z",
            "created": "2020-03-13T18:11:08.357Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
            "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
            "x_mitre_contributors": [
                "Travis Smith, Tripwire",
                "Stefan Kanthak"
            ],
            "x_mitre_detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/001",
                    "external_id": "T1574.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/471.html",
                    "external_id": "CAPEC-471",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order?redirectedfrom=MSDN",
                    "description": "Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014.",
                    "source_name": "Microsoft Dynamic Link Library Search Order"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2010/07/malware-persistence-windows-registry.html",
                    "description": "Harbour, N. (2010, July 15). Malware Persistence without the Windows Registry. Retrieved November 17, 2020.",
                    "source_name": "FireEye Hijacking July 2010"
                },
                {
                    "url": "https://www.owasp.org/index.php/Binary_planting",
                    "description": "OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.",
                    "source_name": "OWASP Binary Planting"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2011/06/fxsst.html",
                    "description": "Harbour, N. (2011, June 3). What the fxsst?. Retrieved November 17, 2020.",
                    "source_name": "FireEye fxsst June 2011"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/security-updates/securityadvisories/2010/2269637",
                    "description": "Microsoft. (, May 23). Microsoft Security Advisory 2269637. Retrieved March 13, 2020.",
                    "source_name": "Microsoft Security Advisory 2269637"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection?redirectedfrom=MSDN",
                    "description": "Microsoft. (2018, May 31). Dynamic-Link Library Redirection. Retrieved March 13, 2020.",
                    "source_name": "Microsoft Dynamic-Link Library Redirection"
                },
                {
                    "url": "https://msdn.microsoft.com/en-US/library/aa375365",
                    "description": "Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.",
                    "source_name": "Microsoft Manifests"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2010/08/dll-search-order-hijacking-revisited.html",
                    "description": "Nick Harbour. (2010, September 1). DLL Search Order Hijacking Revisited. Retrieved March 13, 2020.",
                    "source_name": "FireEye DLL Search Order Hijacking"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-10-18T17:39:12.452Z",
            "name": "Spearphishing Attachment",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.2",
            "created": "2020-03-02T19:05:18.137Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "macOS",
                "Windows",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Philip Winther"
            ],
            "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1566/001",
                    "external_id": "T1566.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/163.html",
                    "external_id": "CAPEC-163",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide",
                    "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.",
                    "source_name": "Microsoft Anti Spoofing"
                },
                {
                    "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf",
                    "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.",
                    "source_name": "ACSC Email Spoofing"
                },
                {
                    "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql",
                    "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
                    "source_name": "Elastic - Koadiac Detection with EQL"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Remote Access Software",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1219",
                    "external_id": "T1219",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Symantec Living off the Land",
                    "description": "Wueest, C., Anand, H. (2017, July). Living off the land and fileless attack techniques. Retrieved April 10, 2018.",
                    "url": "https://www.symantec.com/content/dam/symantec/docs/security-center/white-papers/istr-living-off-the-land-and-fileless-attack-techniques-en.pdf"
                },
                {
                    "source_name": "CrowdStrike 2015 Global Threat Report",
                    "description": "CrowdStrike Intelligence. (2016). 2015 Global Threat Report. Retrieved April 11, 2018.",
                    "url": "https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf"
                },
                {
                    "source_name": "CrySyS Blog TeamSpy",
                    "description": "CrySyS Lab. (2013, March 20). TeamSpy \u2013 Obshie manevri. Ispolzovat\u2019 tolko s razreshenija S-a. Retrieved April 11, 2018.",
                    "url": "https://blog.crysys.hu/2013/03/teamspy/"
                }
            ],
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "2.0",
            "modified": "2020-06-20T20:42:37.320Z",
            "created": "2018-04-18T17:59:24.739Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
            "x_mitre_network_requirements": true,
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\n\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. (Citation: CrowdStrike 2015 Global Threat Report) (Citation: CrySyS Blog TeamSpy)",
            "x_mitre_contributors": [
                "Matt Kelly, @breakersall"
            ],
            "x_mitre_detection": "Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\n[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Malicious File",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-07-21T23:10:47.193Z",
            "created": "2020-03-11T14:49:36.954Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1204/002",
                    "external_id": "T1204.002",
                    "source_name": "mitre-attack"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-26T23:12:30.499Z",
            "name": "Dead Drop Resolver",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "1.0",
            "created": "2020-03-14T22:24:21.841Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
            "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1102/001",
                    "external_id": "T1102.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "malware",
            "modified": "2020-07-03T22:22:05.857Z",
            "name": "RTM",
            "x_mitre_aliases": [
                "RTM",
                "Redaman"
            ],
            "x_mitre_version": "1.1",
            "created": "2017-05-31T21:33:26.565Z",
            "x_mitre_platforms": [
                "Windows"
            ],
            "id": "malware--92ec0cbd-2c30-44a2-b270-73f4ec949841",
            "description": "[RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by the group of the same name ([RTM](https://attack.mitre.org/groups/G0048)). Newer versions of the malware have been reported publicly as Redaman.(Citation: ESET RTM Feb 2017)(Citation: Unit42 Redaman January 2019)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Arie Olshtein, Check Point",
                "Kobi Eisenkraft, Check Point"
            ],
            "labels": [
                "malware"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0148",
                    "external_id": "S0148",
                    "source_name": "mitre-attack"
                },
                {
                    "description": "(Citation: Unit42 Redaman January 2019)",
                    "source_name": "Redaman"
                },
                {
                    "source_name": "ESET RTM Feb 2017",
                    "description": "Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017.",
                    "url": "https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/russian-language-malspam-pushing-redaman-banking-malware/",
                    "description": "Duncan, B., Harbison, M. (2019, January 23). Russian Language Malspam Pushing Redaman Banking Malware. Retrieved June 16, 2020.",
                    "source_name": "Unit42 Redaman January 2019"
                }
            ]
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--c5306215-789f-4844-88a8-7f7d5dc5ad63",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Russia",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--da23145d-8abe-40bf-9f8f-596562a3cb9f",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Germany",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--ee993c53-ddff-4d64-b3d0-fe0b0f5965e5",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Ukraine",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2021-03-13T20:09:21.308954Z",
            "id": "identity--944ebdb0-97ef-463b-a3a9-52da871fcf64",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Financial Services sector as a target",
            "sectors": [
                "financial-services"
            ],
            "spec_version": "2.1",
            "type": "identity"
        },
        {
            "type": "relationship",
            "id": "relationship--b1bc8464-4d53-4d17-9951-db80e76c76c9",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "originates-from",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--c5306215-789f-4844-88a8-7f7d5dc5ad63"
        },
        {
            "type": "relationship",
            "id": "relationship--84d56c96-ab38-4469-9750-a6468c331aeb",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--da23145d-8abe-40bf-9f8f-596562a3cb9f"
        },
        {
            "type": "relationship",
            "id": "relationship--9a698b99-f3f8-4676-bb8b-271e15017b90",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--ee993c53-ddff-4d64-b3d0-fe0b0f5965e5"
        },
        {
            "type": "relationship",
            "id": "relationship--d8439b49-9659-4167-93ec-9bd7c851e31b",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--c5306215-789f-4844-88a8-7f7d5dc5ad63"
        },
        {
            "type": "relationship",
            "id": "relationship--aa719ec7-e820-4059-b858-e4d758f4692a",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "identity--944ebdb0-97ef-463b-a3a9-52da871fcf64"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--9cc2dee0-19a4-4a8d-a1e9-a7a81c080762",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Czech",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--acc6e580-f27e-4745-bd94-c766acd9af12",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--9cc2dee0-19a4-4a8d-a1e9-a7a81c080762"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--df8f4b00-e2a3-4e02-a4dc-94c4270e6e65",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Kazakhstan",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--707015f7-738f-498b-828b-4405b9262c7f",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
            "target_ref": "location--df8f4b00-e2a3-4e02-a4dc-94c4270e6e65"
        }
    ]
}