{
    "type": "bundle",
    "id": "bundle--51b66f4d-b270-47b3-840a-c256fcf87639",
    "spec_version": "2.0",
    "objects": [
        {   "primary_motivation": "organizational-gain",
            "first_seen":"2010",
            "x_MISP-description": "Activity: defense and aerospace sectors, also interested in targeting entities in the oil/gas industry.",
            "x_MISP-uuid": "ba724df5-9aa0-45ca-8e0e-7101c208ae48",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "intrusion-set",
            "name": "Ajax Security Team",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 [Ajax Security Team](https://attack.mitre.org/groups/G0130) transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.(Citation: FireEye Operation Saffron Rose 2013)",
            "x_mitre_version": "1.0",
            "modified": "2022-06-11T20:10:32.917Z",
            "aliases": [
                "Ajax Security Team",
                "Operation Woolen-Goldfish",
                "AjaxTM",
                "Rocket Kitten",
                "Flying Kitten",
                "Operation Saffron Rose",
                "SaffronRose",
                "Saffron Rose",
                "AjaxSecurityTeam",
                "Group 26",
                "Sayad",
                "TEMP.Beanie"
            ],
            "created": "2021-04-14T13:17:43.941Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "id": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/groups/G0130",
                    "external_id": "G0130",
                    "source_name": "mitre-attack"
                },
                {
                    "description": "Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and the campaign Operation Woolen-Goldfish.(Citation: Check Point Rocket Kitten)(Citation: TrendMicro Operation Woolen Goldfish March 2015)",
                    "source_name": "Operation Woolen-Goldfish"
                },
                {
                    "description": "(Citation: FireEye Operation Saffron Rose 2013)",
                    "source_name": "AjaxTM"
                },
                {
                    "description": "Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and Rocket Kitten.(Citation: Check Point Rocket Kitten)(Citation: IranThreats Kittens Dec 2017)",
                    "source_name": "Rocket Kitten"
                },
                {
                    "description": "(Citation: CrowdStrike Flying Kitten )",
                    "source_name": "Flying Kitten"
                },
                {
                    "description": "(Citation: FireEye Operation Saffron Rose 2013)",
                    "source_name": "Operation Saffron Rose"
                },
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf",
                    "description": "Villeneuve, N. et al.. (2013). OPERATION SAFFRON ROSE . Retrieved May 28, 2020.",
                    "source_name": "FireEye Operation Saffron Rose 2013"
                },
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                },
                {
                    "url": "https://documents.trendmicro.com/assets/wp/wp-operation-woolen-goldfish.pdf",
                    "description": "Cedric Pernet, Kenney Lu. (2015, March 19). Operation Woolen-Goldfish - When Kittens Go phishing. Retrieved April 21, 2021.",
                    "source_name": "TrendMicro Operation Woolen Goldfish March 2015"
                },
                {
                    "url": "https://iranthreats.github.io/resources/attribution-flying-rocket-kitten/",
                    "description": "Iran Threats . (2017, December 5). Flying Kitten to Rocket Kitten, A Case of Ambiguity and Shared Code. Retrieved May 28, 2020.",
                    "source_name": "IranThreats Kittens Dec 2017"
                },
                {
                    "url": "https://www.crowdstrike.com/blog/cat-scratch-fever-crowdstrike-tracks-newly-reported-iranian-actor-flying-kitten/",
                    "description": "Dahl, M.. (2014, May 13). Cat Scratch Fever: CrowdStrike Tracks Newly Reported Iranian Actor as FLYING KITTEN. Retrieved May 27, 2020.",
                    "source_name": "CrowdStrike Flying Kitten "
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1fbd56ed-e8fe-4601-b676-62e42370cbcc",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.(Citation: Check Point Rocket Kitten)",
            "target_ref": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "modified": "2021-04-14T14:03:30.714Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.714Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4b98c580-7907-487c-a5b1-202663762c47",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has used personalized spearphishing attachments.(Citation: Check Point Rocket Kitten)",
            "target_ref": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "modified": "2021-04-14T14:03:30.696Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.696Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--12e483aa-14a0-41ea-b6fd-7ced3590472b",
            "description": "(Citation: Check Point Rocket Kitten)",
            "target_ref": "tool--fbd727ea-c0dc-42a9-8448-9e12962d1ab5",
            "modified": "2021-04-14T14:05:51.798Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:05:51.798Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--74650ec9-91db-4f17-a30e-2bfc1b84c86f",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has lured victims into executing malicious files.(Citation: FireEye Operation Saffron Rose 2013)",
            "target_ref": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "modified": "2021-04-14T14:03:30.666Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.666Z",
            "external_references": [
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf",
                    "description": "Villeneuve, N. et al.. (2013). OPERATION SAFFRON ROSE . Retrieved May 28, 2020.",
                    "source_name": "FireEye Operation Saffron Rose 2013"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--03632545-0422-4b88-b5c8-f3b52ccfd28f",
            "description": "(Citation: Check Point Rocket Kitten)",
            "target_ref": "tool--9a2640c2-9f43-46fe-b13f-bde881e55555",
            "modified": "2021-04-14T14:05:51.792Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:05:51.792Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--25424268-9ffb-40ed-8335-249deea323ca",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has used various social media channels to spearphish victims.(Citation: FireEye Operation Saffron Rose 2013)",
            "target_ref": "attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317",
            "modified": "2021-04-14T14:03:30.708Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.708Z",
            "external_references": [
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf",
                    "description": "Villeneuve, N. et al.. (2013). OPERATION SAFFRON ROSE . Retrieved May 28, 2020.",
                    "source_name": "FireEye Operation Saffron Rose 2013"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--ac196369-5b5b-4e71-805a-3f64f150b1e2",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage.(Citation: Check Point Rocket Kitten)",
            "target_ref": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8",
            "modified": "2021-04-14T14:03:30.755Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.755Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--efc39174-1103-4834-9efa-d0001ab1dd80",
            "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.(Citation: Check Point Rocket Kitten)",
            "target_ref": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
            "modified": "2021-04-14T14:03:30.688Z",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-04-14T14:03:30.688Z",
            "external_references": [
                {
                    "url": "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf",
                    "description": "Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018.",
                    "source_name": "Check Point Rocket Kitten"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Credentials from Web Browsers",
            "x_mitre_data_sources": [
                "File: File Access",
                "Command: Command Execution",
                "Process: OS API Execution",
                "Process: Process Access"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-04-14T14:03:47.293Z",
            "created": "2020-02-12T18:57:36.041Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }
            ],
            "id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
            "x_mitre_contributors": [
                "Ryan Benson, Exabeam",
                "Barry Shteiman, Exabeam",
                "Sylvain Gil, Exabeam",
                "RedHuntLabs, @redhuntlabs"
            ],
            "x_mitre_detection": "Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1555/003",
                    "external_id": "T1555.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://blog.talosintelligence.com/2018/02/olympic-destroyer.html",
                    "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.",
                    "source_name": "Talos Olympic Destroyer 2018"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata",
                    "description": "Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019.",
                    "source_name": "Microsoft CryptUnprotectData April 2018"
                },
                {
                    "url": "https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign",
                    "description": "Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019.",
                    "source_name": "Proofpoint Vega Credential Stealer May 2018"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html",
                    "description": "Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019.",
                    "source_name": "FireEye HawkEye Malware July 2017"
                },
                {
                    "url": "https://github.com/putterpanda/mimikittenz",
                    "description": "Jamieson O'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019.",
                    "source_name": "GitHub Mimikittenz July 2016"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-03-20T15:42:48.595Z",
            "name": "Ingress Tool Transfer",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content",
                "File: File Creation"
            ],
            "x_mitre_version": "2.0",
            "created": "2017-05-31T21:31:16.408Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
            "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1105",
                    "external_id": "T1105",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-10-21T01:30:56.227Z",
            "name": "Keylogging",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Modification",
                "Driver: Driver Load",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-02-11T18:58:11.791Z",
            "x_mitre_permissions_required": [
                "Administrator",
                "root",
                "SYSTEM",
                "User"
            ],
            "x_mitre_platforms": [
                "Windows",
                "macOS",
                "Linux",
                "Network"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
            "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }
            ],
            "x_mitre_detection": "Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1056/001",
                    "external_id": "T1056.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/568.html",
                    "external_id": "CAPEC-568",
                    "source_name": "capec"
                },
                {
                    "source_name": "Adventures of a Keystroke",
                    "description": "Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.",
                    "url": "http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf"
                },
                {
                    "url": "https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954",
                    "description": "Omar Santos. (2020, October 19). Attackers Continue to Target Legacy Devices. Retrieved October 20, 2020.",
                    "source_name": "Cisco Blog Legacy Device Attacks"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-10-18T17:39:12.452Z",
            "name": "Spearphishing Attachment",
            "x_mitre_data_sources": [
                "File: File Creation",
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.2",
            "created": "2020-03-02T19:05:18.137Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "macOS",
                "Windows",
                "Linux"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
            "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Philip Winther"
            ],
            "x_mitre_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1566/001",
                    "external_id": "T1566.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/163.html",
                    "external_id": "CAPEC-163",
                    "source_name": "capec"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide",
                    "description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.",
                    "source_name": "Microsoft Anti Spoofing"
                },
                {
                    "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf",
                    "description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.",
                    "source_name": "ACSC Email Spoofing"
                },
                {
                    "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql",
                    "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
                    "source_name": "Elastic - Koadiac Detection with EQL"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-10-18T01:55:02.988Z",
            "name": "Spearphishing via Service",
            "x_mitre_data_sources": [
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content",
                "Network Traffic: Network Traffic Flow"
            ],
            "x_mitre_version": "2.0",
            "created": "2020-03-02T19:24:00.951Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317",
            "description": "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_detection": "Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1566/003",
                    "external_id": "T1566.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/163.html",
                    "external_id": "CAPEC-163",
                    "source_name": "capec"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Malicious File",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "File: File Creation"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-07-21T23:10:47.193Z",
            "created": "2020-03-11T14:49:36.954Z",
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
            "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.\n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1204/002",
                    "external_id": "T1204.002",
                    "source_name": "mitre-attack"
                }
            ]
        },
        {
            "type": "tool",
            "modified": "2018-10-17T00:14:20.652Z",
            "name": "Havij",
            "x_mitre_aliases": [
                "Havij"
            ],
            "x_mitre_version": "1.0",
            "created": "2018-04-18T17:59:24.739Z",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "id": "tool--fbd727ea-c0dc-42a9-8448-9e12962d1ab5",
            "description": "[Havij](https://attack.mitre.org/software/S0224) is an automatic SQL Injection tool distributed by the Iranian ITSecTeam security company. Havij has been used by penetration testers and adversaries. (Citation: Check Point Havij Analysis)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "labels": [
                "tool"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0224",
                    "external_id": "S0224",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://blog.checkpoint.com/2015/05/14/analysis-havij-sql-injection-tool/",
                    "description": "Ganani, M. (2015, May 14). Analysis of the Havij SQL Injection tool. Retrieved March 19, 2018.",
                    "source_name": "Check Point Havij Analysis"
                }
            ]
        },
        {
            "type": "tool",
            "modified": "2018-10-17T00:14:20.652Z",
            "name": "sqlmap",
            "x_mitre_aliases": [
                "sqlmap"
            ],
            "x_mitre_version": "1.0",
            "created": "2018-04-18T17:59:24.739Z",
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "id": "tool--9a2640c2-9f43-46fe-b13f-bde881e55555",
            "description": "[sqlmap](https://attack.mitre.org/software/S0225) is an open source penetration testing tool that can be used to automate the process of detecting and exploiting SQL injection flaws. (Citation: sqlmap Introduction)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "labels": [
                "tool"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0225",
                    "external_id": "S0225",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "http://sqlmap.org/",
                    "description": "Damele, B., Stampar, M. (n.d.). sqlmap. Retrieved March 19, 2018.",
                    "source_name": "sqlmap Introduction"
                }
            ]
        },
        {
            "type": "relationship",
            "id": "relationship--89e3a846-bcab-4d1d-bee8-cfdab7c11a0a",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "originates-from",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "target_ref": "location--036a483f-27e7-48f0-9e75-b44f99c3c531"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--036a483f-27e7-48f0-9e75-b44f99c3c531",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Iran",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--509ac619-8f17-4a59-8117-e7156fdb7419",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "target_ref": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--8b9cdfae-67fb-4939-85b3-956bb48c3851",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "United States",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "type": "relationship",
            "id": "relationship--b4d2bdc6-c89d-4615-a647-e42b46916345",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
            "target_ref": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d"
        },
        {
            "created": "2021-03-13T20:09:21.304762Z",
            "id": "identity--aa25fea8-ef34-47b8-83ab-05ac3dc9326d",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Defense sector as a target",
            "sectors": [
                "defense"
            ],
            "spec_version": "2.1",
            "type": "identity"
        }
    ]
}